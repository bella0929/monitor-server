{"version":3,"sources":["index.js"],"names":["_","RouterConfigBuilder","API_RES","MUser","ucConfig","http","moment","UC","detail","routerConfigBuilder","METHOD_TYPE_GET","req","res","request","query","cookieAccount","get","reqAccount","rawUser","getByAccount","user","formatRecord","send","showResult","update","METHOD_TYPE_POST","body","updateUcid","showError","updateRecord","key","has","password","passwordMd5","hash","isUpdateSuccess","deleteRecord","deleteUcid","is_delete","search","rawUserList","searchByAccount","userList","push","searchUC","account","pageSize","parseInt","isInteger","appId","appID","appkey","api","ts","unix","queryData","keyword","headers","sign","getSign","resultUC","params","resultUCList","forEach","item","register","nickname","email","registerType","REGISTER_TYPE_SITE","role","ROLE_DEV","userInfo","password_md5","register_type","isEmpty","isSuccess","modifyPassword","ucid","oldPassword","oldPasswordMd5","userPasswordMd5","newPasswordMd5","updateData","modifyMsg","destroyAccount","clearCookie"],"mappings":"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","sourcesContent":["/**\n * 用户信息处理\n */\nimport _ from 'lodash'\nimport RouterConfigBuilder from '~/src/library/utils/modules/router_config_builder'\nimport API_RES from '~/src/constants/api_res'\nimport MUser from '~/src/model/project/user'\nimport ucConfig from '~/src/configs/user_center'\nimport http from '~/src/library/http'\nimport moment from 'moment'\nimport UC from '~/src/library/uc'\n\nlet detail = RouterConfigBuilder.routerConfigBuilder('/api/user/detail', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let request = req.query\n  let cookieAccount = _.get(req, ['fee', 'user', 'account'], '')\n  // 没有指定account则返回当前登录用户信息\n  let reqAccount = _.get(request, ['account'], cookieAccount)\n  let rawUser = await MUser.getByAccount(reqAccount)\n  let user = MUser.formatRecord(rawUser)\n  res.send(API_RES.showResult(user))\n}, false)\n\nlet update = RouterConfigBuilder.routerConfigBuilder('/api/user/update', RouterConfigBuilder.METHOD_TYPE_POST, async (req, res) => {\n  let request = req.body\n\n  let updateUcid = _.get(request, 'ucid', 0)\n  if (updateUcid === 0) {\n    res.send(API_RES.showError('ucid不能为空'))\n    return\n  }\n  let updateRecord = {}\n  for (let key of [\n    'email',\n    'nickname',\n    'role',\n    'register_type',\n    'avatar_url',\n    'mobile' ]) {\n    if (_.has(request, [key])) {\n      updateRecord[key] = _.get(request, [key], '')\n    }\n  }\n  // 密码需要单独处理\n  if (_.has(request, 'password')) {\n    let password = _.get(request, 'password')\n    let passwordMd5 = MUser.hash(password)\n    updateRecord['password_md5'] = passwordMd5\n  }\n\n  let isUpdateSuccess = await MUser.update(updateUcid, updateRecord)\n  if (isUpdateSuccess) {\n    res.send(API_RES.showResult(true))\n  } else {\n    res.send(API_RES.showError('更新失败, 请重试'))\n  }\n}, false)\n\nlet deleteRecord = RouterConfigBuilder.routerConfigBuilder('/api/user/delete', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let request = req.query\n\n  let deleteUcid = _.get(request, 'ucid', 0)\n  // 没有指定account则返回当前登录用户信息\n  let isUpdateSuccess = await MUser.update(deleteUcid, { is_delete: true })\n  res.send(API_RES.showResult(isUpdateSuccess))\n}, false)\n\nlet search = RouterConfigBuilder.routerConfigBuilder('/api/user/search', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let request = req.query\n\n  let reqAccount = _.get(request, ['account'], '')\n  let rawUserList = await MUser.searchByAccount(reqAccount)\n  let userList = []\n  for (let rawUser of rawUserList) {\n    let user = MUser.formatRecord(rawUser)\n    userList.push(user)\n  }\n  res.send(API_RES.showResult(userList))\n}, false)\n\nlet searchUC = RouterConfigBuilder.routerConfigBuilder('/api/user/search_uc', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let request = req.query\n  let account = _.get(request, ['account'], '')\n  let pageSize = parseInt(_.get(request, ['size'], 10))\n\n  if (_.isInteger(pageSize) === false) {\n    res.send(API_RES.showError('size 格式不正确'))\n    return\n  }\n  const appId = ucConfig.appID\n  const key = ucConfig.appkey\n  const api = ucConfig.api\n  const ts = moment().unix() * 1000\n\n  let queryData = {\n    keyword: account,\n    pageSize\n  }\n  let headers = {\n    appId,\n    ts\n  }\n  const sign = UC.getSign(queryData, headers, key)\n  headers['sign'] = sign\n  let resultUC = await http.get(api + '/ehr/user/searchByKeyword', { params: queryData, headers })\n  let resultUCList = _.get(resultUC, ['data', 'data', 'list'], [])\n  resultUCList.forEach(item => {\n    item['ucid'] = item['id']\n  })\n  res.send(API_RES.showResult(resultUCList))\n}, false)\n\nconst register = RouterConfigBuilder.routerConfigBuilder('/api/user/register', RouterConfigBuilder.METHOD_TYPE_POST, async (req, res) => {\n  const body = _.get(req, ['body'], {})\n  const account = _.get(body, ['account'], '')\n  const password = _.get(body, ['password'], '')\n  const nickname = _.get(body, ['nickname'], '')\n  const email = account\n  const registerType = MUser.REGISTER_TYPE_SITE\n  const role = MUser.ROLE_DEV\n  const passwordMd5 = MUser.hash(password)\n  const userInfo = {\n    email,\n    password_md5: passwordMd5,\n    nickname,\n    register_type: registerType,\n    role\n  }\n  // 判断此账号是否存在\n  let rawUser = MUser.getByAccount(account)\n  if (_.isEmpty(rawUser) || rawUser.is_delete === 1) {\n    const isSuccess = await MUser.register(account, userInfo)\n    if (isSuccess) {\n      res.send(API_RES.showResult([], '注册成功'))\n    } else {\n      res.send(API_RES.showError('注册失败'))\n    }\n  } else {\n    res.send(API_RES.showError('账号已存在'))\n  }\n}, false, false)\n\nconst modifyPassword = RouterConfigBuilder.routerConfigBuilder('/api/user/modify/password', RouterConfigBuilder.METHOD_TYPE_POST, async (req, res) => {\n  const body = _.get(req, ['body'], {})\n  const ucid = _.get(req, ['fee', 'user', 'ucid'], 0)\n  const oldPassword = _.get(body, ['oldPassword'], '')\n  const password = _.get(body, ['password'], '')\n\n  const rawUser = await MUser.get(ucid)\n  if (_.isEmpty(rawUser) || rawUser.is_delete === 1) {\n    res.send(API_RES.showError('用户不存在'))\n    return\n  }\n\n  const oldPasswordMd5 = MUser.hash(oldPassword)\n  const userPasswordMd5 = _.get(rawUser, ['password_md5'], '')\n  if (oldPasswordMd5 !== userPasswordMd5) {\n    res.send(API_RES.showError('密码不正确, 请确认密码'))\n    return\n  }\n\n  const newPasswordMd5 = MUser.hash(password)\n  let updateData = {\n    password_md5: newPasswordMd5\n  }\n  const isSuccess = await MUser.update(ucid, updateData)\n  if (isSuccess) {\n    res.send(API_RES.showResult([], '密码修改成功'))\n  } else {\n    res.send(API_RES.showError('密码修改失败'))\n  }\n}, false)\n\nconst modifyMsg = RouterConfigBuilder.routerConfigBuilder('/api/user/modify/msg', RouterConfigBuilder.METHOD_TYPE_POST, async (req, res) => {\n  const body = _.get(req, ['body'], {})\n  const ucid = _.get(req, ['fee', 'user', 'ucid'], 0)\n  const nickname = _.get(body, ['nickname'], '')\n\n  const rawUser = await MUser.get(ucid)\n  if (_.isEmpty(rawUser) || rawUser.is_delete === 1) {\n    res.send(API_RES.showError('用户不存在'))\n    return\n  }\n\n  let updateData = {\n    nickname\n  }\n  let isSuccess = await MUser.update(ucid, updateData)\n  if (isSuccess) {\n    res.send(API_RES.showResult([], '信息修改成功'))\n  } else {\n    res.send(API_RES.showError('信息修改失败'))\n  }\n}, false)\n\nconst destroyAccount = RouterConfigBuilder.routerConfigBuilder('/api/user/destroy', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  const ucid = _.get(req, ['fee', 'user', 'ucid'], 0)\n  const rawUser = MUser.get(ucid)\n\n  if (_.isEmpty(rawUser) === false || rawUser.is_delete === 1) {\n    res.send(API_RES.showError('用户不存在'))\n    return\n  }\n  let updateData = {\n    is_delete: 1\n  }\n  const isSuccess = await MUser.update(ucid, updateData)\n  if (isSuccess) {\n    res.clearCookie('fee_token')\n    res.clearCookie('ucid')\n    res.clearCookie('nickname')\n    res.clearCookie('account')\n    res.send(API_RES.showResult([], '注销成功'))\n  } else {\n    res.send(API_RES.showError('注销失败'))\n  }\n}, false)\n\nexport default {\n  ...detail,\n  ...search,\n  ...update,\n  ...deleteRecord,\n  ...searchUC,\n  ...register,\n  ...modifyPassword,\n  ...modifyMsg,\n  ...destroyAccount\n}\n"],"file":"index.js"}