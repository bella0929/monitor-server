{"version":3,"sources":["index.js"],"names":["_","moment","RouterConfigBuilder","CModel","API_RES","DATE_FORMAT","runtimeVersion","routerConfigBuilder","METHOD_TYPE_GET","req","res","tableName","currentMonth","format","DATABASE_BY_MONTH","month","get","projectId","runtimeVersionRecordParams","where","count_at_month","project_id","runtimeVersionList","getSelect","resultList","osItem","push","type","value","send","showResult","err","showError","message"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,mBAAP,MAAgC,mDAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,MAAMC,cAAc,GAAGJ,mBAAmB,CAACK,mBAApB,CAAwC,qBAAxC,EAA+DL,mBAAmB,CAACM,eAAnF,EAAoG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC7I,MAAI;AACF,UAAMC,SAAS,GAAG,4BAAlB;AACA,UAAMC,YAAY,GAAGX,MAAM,GAAGY,MAAT,CAAgBR,WAAW,CAACS,iBAA5B,CAArB;;AACA,UAAMC,KAAK,GAAGf,CAAC,CAACgB,GAAF,CAAMP,GAAN,EAAW,CAAC,OAAD,EAAU,OAAV,CAAX,EAA+BG,YAA/B,CAAd;;AACA,UAAMK,SAAS,GAAGjB,CAAC,CAACgB,GAAF,CAAMP,GAAN,EAAW,CAAC,KAAD,EAAQ,SAAR,EAAmB,WAAnB,CAAX,EAA4C,CAA5C,CAAlB;;AACA,UAAMS,0BAA0B,GAAG;AACjCP,MAAAA,SAAS,EAAEA,SADsB;AAEjCQ,MAAAA,KAAK,EAAE;AACLC,QAAAA,cAAc,EAAEL,KADX;AAELM,QAAAA,UAAU,EAAEJ;AAFP,OAF0B;AAMjCA,MAAAA,SAAS,EAAEA;AANsB,KAAnC;AAQA,UAAMK,kBAAkB,GAAG,MAAMnB,MAAM,CAACoB,SAAP,CAAiBL,0BAAjB,CAAjC;AACA,QAAIM,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIC,MAAT,IAAmBH,kBAAnB,EAAuC;AACrCE,MAAAA,UAAU,CAACE,IAAX,CAAgB;AACdC,QAAAA,IAAI,EAAEF,MAAM,CAAC,iBAAD,CADE;AAEd;AACAG,QAAAA,KAAK,EAAEH,MAAM,CAAC,aAAD;AAHC,OAAhB;AAKD;;AACDf,IAAAA,GAAG,CAACmB,IAAJ,CAASzB,OAAO,CAAC0B,UAAR,CAAmBN,UAAnB,CAAT;AACD,GAvBD,CAuBE,OAAOO,GAAP,EAAY;AACZrB,IAAAA,GAAG,CAACmB,IAAJ,CAASzB,OAAO,CAAC4B,SAAR,CAAkBD,GAAG,CAACE,OAAtB,CAAT;AACD;AACF,CA3BsB,CAAvB;AA6BA,eAAe,EACb,GAAG3B;AADU,CAAf","sourcesContent":["import _ from 'lodash'\nimport moment from 'moment'\nimport RouterConfigBuilder from '~/src/library/utils/modules/router_config_builder'\nimport CModel from '~/src/model'\nimport API_RES from '~/src/constants/api_res'\nimport DATE_FORMAT from '~/src/constants/date_format'\n\nconst runtimeVersion = RouterConfigBuilder.routerConfigBuilder('/api/runtimeVersion', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  try {\n    const tableName = 't_r_system_runtime_version'\n    const currentMonth = moment().format(DATE_FORMAT.DATABASE_BY_MONTH)\n    const month = _.get(req, ['query', 'month'], currentMonth)\n    const projectId = _.get(req, ['fee', 'project', 'projectId'], 0)\n    const runtimeVersionRecordParams = {\n      tableName: tableName,\n      where: {\n        count_at_month: month,\n        project_id: projectId\n      },\n      projectId: projectId\n    }\n    const runtimeVersionList = await CModel.getSelect(runtimeVersionRecordParams)\n    let resultList = []\n    for (let osItem of runtimeVersionList) {\n      resultList.push({\n        type: osItem['runtime_version'],\n        // key: osItem['runtime_version'],\n        value: osItem['total_count']\n      })\n    }\n    res.send(API_RES.showResult(resultList))\n  } catch (err) {\n    res.send(API_RES.showError(err.message))\n  }\n}\n)\nexport default {\n  ...runtimeVersion\n}\n"],"file":"index.js"}