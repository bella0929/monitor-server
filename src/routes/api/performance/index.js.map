{"version":3,"sources":["index.js"],"names":["moment","_","DATE_FORMAT","API_RES","MPerformance","RouterConfigBuilder","urlList","routerConfigBuilder","METHOD_TYPE_GET","req","res","projectId","get","console","log","request","startAt","endAt","summaryBy","includes","UNIT","DAY","HOUR","MINUTE","send","showError","currentStamp","unix","floor","ceil","INDICATOR_TYPE_LIST","getDistinctUrlListInRange","showResult","urlOverview","url","overview","getUrlOverviewInSameMonth","projectOverview","lineChartData","rawResult","indicator","lineChartDataList","getIndicatorLineChartDataInSameMonth","record","index_timestamp_ms","indexTimestampMs","index","value","set","resultList","timestampMsKeyList","Object","keys","sort","timestampMsKey","push"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport _ from 'lodash'\nimport DATE_FORMAT from '~/src/constants/date_format'\nimport API_RES from '~/src/constants/api_res'\nimport MPerformance from '~/src/model/parse/performance'\nimport RouterConfigBuilder from '~/src/library/utils/modules/router_config_builder'\n\n/**\n * 性能指标接口\n *\n * 提供指定项目时间范围内的如下数据(均只取当月数据):\n * 1. 项目下url列表\n * 4. 提供项目整体指标均值\n * 2. 提供指定url下的各项指标平均值(一个接口, 返回所有指标数据)\n * 3. 提供指定url下的各项指标折线图(按url, 指标进行返回)\n */\n\n/**\n * 提供时间范围之内的所有url列表\n */\nlet urlList = RouterConfigBuilder.routerConfigBuilder('/api/performance/url_list', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let projectId = _.get(req, ['fee', 'project', 'projectId'], 0);\n  console.log('performance projectId ',projectId);\n  let request = _.get(req, ['query'], {})\n  // 获取开始&结束时间\n  let startAt = _.get(request, ['st'], 0)\n  let endAt = _.get(request, ['et'], 0)\n  const summaryBy = _.get(request, 'summaryBy', '')\n  if (_.includes([DATE_FORMAT.UNIT.DAY, DATE_FORMAT.UNIT.HOUR, DATE_FORMAT.UNIT.MINUTE], summaryBy) === false) {\n    res.send(API_RES.showError(`summaryBy参数不正确`))\n    return\n  }\n\n  const currentStamp = moment().unix()\n\n  if (startAt) {\n    startAt = _.floor(startAt / 1000)\n  } else {\n    startAt = currentStamp\n  }\n  if (endAt) {\n    endAt = _.ceil(endAt / 1000)\n  } else {\n    endAt = currentStamp\n  }\n  console.log('projectId, MPerformance.INDICATOR_TYPE_LIST, startAt, endAt, summaryBy ',projectId, MPerformance.INDICATOR_TYPE_LIST, startAt, endAt, summaryBy);\n  let urlList = await MPerformance.getDistinctUrlListInRange(projectId, MPerformance.INDICATOR_TYPE_LIST, startAt, endAt, summaryBy)\n  res.send(API_RES.showResult(urlList))\n}\n)\n\n/**\n * 提供时间范围之内指定url的各项指标均值\n */\nlet urlOverview = RouterConfigBuilder.routerConfigBuilder('/api/performance/url/overview', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let projectId = _.get(req, ['fee', 'project', 'projectId'], 0)\n  let request = _.get(req, ['query'], {})\n\n  // 获取开始&结束时间\n  let startAt = _.get(request, ['st'], 0)\n  let endAt = _.get(request, ['et'], 0)\n  let url = _.get(request, ['url'])\n\n  const summaryBy = _.get(request, 'summaryBy', '')\n  if (_.includes([DATE_FORMAT.UNIT.DAY, DATE_FORMAT.UNIT.HOUR, DATE_FORMAT.UNIT.MINUTE], summaryBy) === false) {\n    res.send(API_RES.showError(`summaryBy参数不正确`))\n    return\n  }\n\n  const currentStamp = moment().unix()\n\n  if (startAt) {\n    startAt = _.floor(startAt / 1000)\n  } else {\n    startAt = currentStamp\n  }\n  if (endAt) {\n    endAt = _.ceil(endAt / 1000)\n  } else {\n    endAt = currentStamp\n  }\n  let overview = await MPerformance.getUrlOverviewInSameMonth(projectId, [url], startAt, endAt, summaryBy)\n\n  res.send(API_RES.showResult(overview))\n}\n)\n\n/**\n * 提供时间范围之内项目总体指标均值\n */\nlet projectOverview = RouterConfigBuilder.routerConfigBuilder('/api/performance/project/overview', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let projectId = _.get(req, ['fee', 'project', 'projectId'], 0)\n  let request = _.get(req, ['query'], {})\n  // 获取开始&结束时间\n  let startAt = _.get(request, ['st'], 0)\n  let endAt = _.get(request, ['et'], 0)\n\n  const summaryBy = _.get(request, 'summaryBy', '')\n  if (_.includes([DATE_FORMAT.UNIT.DAY, DATE_FORMAT.UNIT.HOUR, DATE_FORMAT.UNIT.MINUTE], summaryBy) === false) {\n    res.send(API_RES.showError(`summaryBy参数不正确`))\n    return\n  }\n\n  const currentStamp = moment().unix()\n\n  if (startAt) {\n    startAt = _.floor(startAt / 1000)\n  } else {\n    startAt = currentStamp\n  }\n  if (endAt) {\n    endAt = _.ceil(endAt / 1000)\n  } else {\n    endAt = currentStamp\n  }\n  let urlList = await MPerformance.getDistinctUrlListInRange(projectId, MPerformance.INDICATOR_TYPE_LIST, startAt, endAt, summaryBy)\n\n  let overview = await MPerformance.getUrlOverviewInSameMonth(projectId, urlList, startAt, endAt, summaryBy)\n\n  res.send(API_RES.showResult(overview))\n}\n)\n\n/**\n * 提供时间范围之内的指定url下所有指标的折线图\n */\nlet lineChartData = RouterConfigBuilder.routerConfigBuilder('/api/performance/url/line_chart', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let projectId = _.get(req, ['fee', 'project', 'projectId'], 0)\n  let request = _.get(req, ['query'], {})\n  // 获取开始&结束时间\n  let startAt = _.get(request, ['st'], 0)\n  let endAt = _.get(request, ['et'], 0)\n  let url = _.get(request, ['url'], '')\n\n  const summaryBy = _.get(request, 'summaryBy', '')\n  if (_.includes([DATE_FORMAT.UNIT.DAY, DATE_FORMAT.UNIT.HOUR, DATE_FORMAT.UNIT.MINUTE], summaryBy) === false) {\n    res.send(API_RES.showError(`summaryBy参数不正确`))\n    return\n  }\n\n  const currentStamp = moment().unix()\n\n  if (startAt) {\n    startAt = _.floor(startAt / 1000)\n  } else {\n    startAt = currentStamp\n  }\n  if (endAt) {\n    endAt = _.ceil(endAt / 1000)\n  } else {\n    endAt = currentStamp\n  }\n\n  let rawResult = {}\n  for (let indicator of MPerformance.INDICATOR_TYPE_LIST) {\n    console.log('projectId, url, indicator, startAt, endAt, summaryBy',projectId, url, indicator, startAt, endAt, summaryBy);\n    let lineChartDataList = await MPerformance.getIndicatorLineChartDataInSameMonth(projectId, url, indicator, startAt, endAt, summaryBy)\n    // 适配前端数据结构\n    for (let record of lineChartDataList) {\n      let { index_timestamp_ms: indexTimestampMs, index, value } = record\n      _.set(rawResult, [indexTimestampMs, indicator], value)\n      _.set(rawResult, [indexTimestampMs, 'index_timestamp_ms'], indexTimestampMs)\n      _.set(rawResult, [indexTimestampMs, 'index'], index)\n    }\n  }\n\n  let resultList = []\n  let timestampMsKeyList = Object.keys(rawResult).sort()\n  for (let timestampMsKey of timestampMsKeyList) {\n    let record = rawResult[timestampMsKey]\n    resultList.push(record)\n  }\n  console.log('resultList',resultList);\n  res.send(API_RES.showResult(resultList))\n}\n)\n\nexport default {\n  ...urlList,\n  ...urlOverview,\n  ...projectOverview,\n  ...lineChartData\n}\n"],"file":"index.js"}