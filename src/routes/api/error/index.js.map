{"version":3,"sources":["index.js"],"names":["moment","_","MMonitor","DATE_FORMAT","API_RES","RouterConfigBuilder","MErrorSummary","Viser","PROVINCE_LIST","PAGE_SIZE","MAX_URL","parseQueryParam","request","projectId","get","startAt","endAt","url","currentPage","errorNameListJson","errorNameList","JSON","parse","error","subtract","startOf","UNIT","DAY","unix","parseResult","getErrorDistribution","routerConfigBuilder","METHOD_TYPE_GET","req","res","endOf","errorList","getErrorNameDistributionByTimeWithCache","send","showResult","getErrorLogList","offset","errorCount","getTotalCountByConditionInSameMonth","getListByConditionInSameMonth","pageData","pager","current_page","page_size","total","list","getUrlDistribution","countType","rawDistributionList","getUrlPathDistributionListByErrorNameList","distributionList","rawDistribution","url_path","error_count","record","name","value","push","getErrorNameList","getErrorNameDistributionListInSameMonth","error_name","errorName","distribution","getGeographyDistribution","rawRecordList","getList","resultList","distributionMap","rawRecord","cityDistribution","country","Object","keys","provinceMap","province","cityMap","city","has","sort","a","b"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport _ from 'lodash'\nimport MMonitor from '~/src/model/parse/monitor'\nimport DATE_FORMAT from '~/src/constants/date_format'\nimport API_RES from '~/src/constants/api_res'\nimport RouterConfigBuilder from '~/src/library/utils/modules/router_config_builder'\nimport MErrorSummary from '~/src/model/summary/error_summary'\nimport Viser from '~/src/routes/api/error/viser'\nimport PROVINCE_LIST from '~/src/constants/province'\n\nconst PAGE_SIZE = 10\nconst MAX_URL = 10\n\n/**\n * 提供一个方法, 集中解析request参数\n * @param {*} request\n */\nfunction parseQueryParam (request) {\n  let projectId = _.get(request, ['fee', 'project', 'projectId'], 0)\n  let startAt = _.get(request, ['query', 'start_at'], 0)\n  let endAt = _.get(request, ['query', 'end_at'], 0)\n  let url = _.get(request, ['query', 'url'], '')\n  let currentPage = _.get(request, ['query', 'current_page'], 1)\n  let errorNameListJson = _.get(request, ['query', 'error_name_list_json'], '[]')\n  let errorNameList = []\n  try {\n    errorNameList = JSON.parse(errorNameListJson)\n  } catch (error) {\n    errorNameList = []\n  }\n\n  // 提供默认值\n  if (startAt <= 0) {\n    startAt = moment().subtract(7, 'day').startOf(DATE_FORMAT.UNIT.DAY).unix()\n  }\n  if (endAt <= 0) {\n    endAt = moment().unix()\n  }\n  let parseResult = {\n    projectId,\n    startAt,\n    endAt,\n    url,\n    currentPage,\n    errorNameList\n  }\n  return parseResult\n}\n\nlet getErrorDistribution = RouterConfigBuilder.routerConfigBuilder('/api/error/distribution/summary', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  const projectId = _.get(req, ['fee', 'project', 'projectId'], 0)\n  let {\n    startAt,\n    endAt\n  } = parseQueryParam(req)\n  startAt = moment.unix(startAt).startOf(DATE_FORMAT.UNIT.DAY).unix()\n  endAt = moment.unix(endAt).endOf(DATE_FORMAT.UNIT.DAY).unix()\n\n  let errorList = await MErrorSummary.getErrorNameDistributionByTimeWithCache(projectId, startAt, endAt)\n  res.send(API_RES.showResult(errorList))\n})\n\n/**\n * 错误日志\n */\nlet getErrorLogList = RouterConfigBuilder.routerConfigBuilder('/api/error/log/list', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let parseResult = parseQueryParam(req)\n  let {\n    projectId,\n    errorNameList,\n    startAt,\n    endAt,\n    url,\n    currentPage\n  } = parseResult\n  const offset = (currentPage - 1) * PAGE_SIZE\n\n  let errorCount = await MMonitor.getTotalCountByConditionInSameMonth(projectId, startAt, endAt, offset, PAGE_SIZE, errorNameList, url)\n  let errorList = await MMonitor.getListByConditionInSameMonth(projectId, startAt, endAt, offset, PAGE_SIZE, errorNameList, url)\n\n  let pageData = {\n    pager: {\n      current_page: currentPage,\n      page_size: PAGE_SIZE,\n      total: errorCount\n    },\n    list: errorList\n  }\n\n  res.send(API_RES.showResult(pageData))\n})\n\n/**\n * url分布数\n */\nlet getUrlDistribution = RouterConfigBuilder.routerConfigBuilder('/api/error/distribution/url', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let parseResult = parseQueryParam(req)\n  let {\n    projectId,\n    startAt,\n    endAt,\n    errorNameList\n  } = parseResult\n  let countType = DATE_FORMAT.UNIT.DAY\n\n  let rawDistributionList = await MErrorSummary.getUrlPathDistributionListByErrorNameList(projectId, startAt, endAt, errorNameList, countType, MAX_URL)\n  let distributionList = []\n  for (let rawDistribution of rawDistributionList) {\n    let { url_path: url, error_count: errorCount } = rawDistribution\n    let record = {\n      name: url,\n      value: errorCount\n    }\n    distributionList.push(record)\n  }\n  res.send(API_RES.showResult(distributionList))\n})\n\n// 指定error_name分布数\nlet getErrorNameList = RouterConfigBuilder.routerConfigBuilder('/api/error/distribution/error_name', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let parseResult = parseQueryParam(req)\n  let {\n    projectId,\n    startAt,\n    endAt,\n    url,\n    errorNameList\n  } = parseResult\n\n  let countType = DATE_FORMAT.UNIT.DAY\n\n  let rawDistributionList = await MErrorSummary.getErrorNameDistributionListInSameMonth(projectId, startAt, endAt, countType, errorNameList, url)\n  let distributionList = []\n  for (let rawDistribution of rawDistributionList) {\n    let { error_count: errorCount, error_name: errorName } = rawDistribution\n    let distribution = {\n      name: errorName,\n      value: errorCount\n    }\n    distributionList.push(distribution)\n  }\n  res.send(API_RES.showResult(distributionList))\n})\n\nlet getGeographyDistribution = RouterConfigBuilder.routerConfigBuilder('/api/error/distribution/geography', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let parseResult = parseQueryParam(req)\n  let {\n    projectId,\n    startAt,\n    endAt,\n    url,\n    errorNameList\n  } = parseResult\n\n  let countType = DATE_FORMAT.UNIT.DAY\n\n  const rawRecordList = await MErrorSummary.getList(projectId, startAt, endAt, countType, errorNameList, url)\n  let resultList = []\n  let distributionMap = {}\n\n  for (let rawRecord of rawRecordList) {\n    let cityDistribution = _.get(rawRecord, ['city_distribution'], {})\n    // 按省份进行统计\n    for (let country of Object.keys(cityDistribution)) {\n      let provinceMap = _.get(cityDistribution, [country], {})\n      for (let province of Object.keys(provinceMap)) {\n        let cityMap = _.get(provinceMap, [province], {})\n        for (let city of Object.keys(cityMap)) {\n          let errorCount = _.get(cityMap, [city], 0)\n          if (_.has(distributionMap, [province])) {\n            distributionMap[province] = distributionMap[province] + errorCount\n          } else {\n            distributionMap[province] = errorCount\n          }\n        }\n      }\n    }\n  }\n  // 只显示国内省份\n  for (let province of PROVINCE_LIST) {\n    let errorCount = _.get(distributionMap, [province], 0)\n    resultList.push({\n      name: province,\n      value: errorCount\n    })\n  }\n  resultList.sort((a, b) => b['value'] - a['value'])\n  res.send(API_RES.showResult(resultList))\n})\n\nexport default {\n  ...Viser,\n\n  ...getErrorLogList,\n  ...getUrlDistribution,\n\n  ...getErrorNameList,\n  ...getGeographyDistribution,\n  ...getErrorDistribution\n}\n"],"file":"index.js"}