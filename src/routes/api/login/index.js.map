{"version":3,"sources":["index.js"],"names":["_","RouterConfigBuilder","API_RES","Auth","MUser","http","ucConfig","Logger","moment","UC","commonConfig","LOGIN_TYPE","get","siteLogin","routerConfigBuilder","METHOD_TYPE_POST","req","res","user","token","generateToken","ucid","name","account","cookie","maxAge","httpOnly","send","showResult","ucLogin","handleUCLogin","normalLogin","handleNormalLogin","getLoginType","METHOD_TYPE_GET","login","showError","logout","clearCookie","body","password","rawUser","getSiteUserByAccount","isEmpty","is_delete","savePassword","passwordMd5","hash","nickname","avatarUrl","DEFAULT_AVATAR_URL","registerType","REGISTER_TYPE_SITE","ts","unix","appId","appID","appkey","formData","cid","un","pw","headers","sign","getSign","loginResponse","postForm","api","catch","err","warn","set","LoginErrorResponse","params","ids","userInfoResponse","userInfo","userInfoError","mobile","email","isNil","getByAccount","isRegisterSuccess","register"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport RouterConfigBuilder from '~/src/library/utils/modules/router_config_builder'\nimport API_RES from '~/src/constants/api_res'\nimport Auth from '~/src/library/auth'\nimport MUser from '~/src/model/project/user'\nimport http from '~/src/library/http'\nimport ucConfig from '~/src/configs/user_center'\nimport Logger from '~/src/library/logger'\nimport moment from 'moment'\nimport UC from '~/src/library/uc'\nimport commonConfig from '~/src/configs/common'\n\nconst LOGIN_TYPE = _.get(commonConfig, ['loginType'], 'normal')\nlet siteLogin = RouterConfigBuilder.routerConfigBuilder('/api/login/site', RouterConfigBuilder.METHOD_TYPE_POST, async (req, res) => {\n  let user = {}\n  let token = Auth.generateToken(user.ucid, user.name, user.account)\n  res.cookie('fee_token', token, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n  res.cookie('ucid', user.ucid, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n  res.cookie('name', user.name, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n  res.cookie('account', user.account, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n  res.send(API_RES.showResult({ ucid: user.ucid, name: user.name, account: user.account }))\n},\nfalse,\nfalse\n)\n\nlet ucLogin = RouterConfigBuilder.routerConfigBuilder('/api/login/uc', RouterConfigBuilder.METHOD_TYPE_POST, async (req, res) => {\n  await handleUCLogin(req, res)\n},\nfalse,\nfalse\n)\n\nlet normalLogin = RouterConfigBuilder.routerConfigBuilder('/api/login/normal', RouterConfigBuilder.METHOD_TYPE_POST, async (req, res) => {\n  await handleNormalLogin(req, res)\n}, false, false)\n\nlet getLoginType = RouterConfigBuilder.routerConfigBuilder('/api/login/type', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  res.send(API_RES.showResult(LOGIN_TYPE))\n}, false, false)\n\nlet login = RouterConfigBuilder.routerConfigBuilder('/api/login', RouterConfigBuilder.METHOD_TYPE_POST, async (req, res) => {\n  switch (LOGIN_TYPE) {\n    case 'uc':\n      await handleUCLogin(req, res)\n      break\n    case 'normal':\n      await handleNormalLogin(req, res)\n      break\n    default:\n      res.send(API_RES.showError('请确认登录方式'))\n  }\n}, false, false)\n\nlet logout = RouterConfigBuilder.routerConfigBuilder('/api/logout', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  res.clearCookie('fee_token')\n  res.clearCookie('ucid')\n  res.clearCookie('nickname')\n  res.clearCookie('account')\n  res.send(API_RES.showResult({}))\n},\nfalse,\nfalse\n)\nconst handleNormalLogin = async (req, res) => {\n  const body = _.get(req, ['body'], {})\n  const account = _.get(body, ['account'], '')\n  const password = _.get(body, ['password'], '')\n\n  const rawUser = await MUser.getSiteUserByAccount(account)\n  if (_.isEmpty(rawUser) || rawUser.is_delete === 1) {\n    res.send(API_RES.showError('未注册'))\n    return\n  }\n  const savePassword = _.get(rawUser, ['password_md5'], '')\n  const passwordMd5 = MUser.hash(password)\n  if (savePassword === passwordMd5) {\n    let nickname = _.get(rawUser, ['nickname'], '')\n    let ucid = _.get(rawUser, ['ucid'], '')\n    let avatarUrl = _.get(rawUser, ['avatar_url'], MUser.DEFAULT_AVATAR_URL)\n    let registerType = _.get(rawUser, ['register_type'], MUser.REGISTER_TYPE_SITE)\n    let token = Auth.generateToken(ucid, account, nickname)\n\n    res.cookie('fee_token', token, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n    res.cookie('ucid', ucid, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n    res.cookie('nickname', nickname, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n    res.cookie('account', account, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n    res.send(API_RES.showResult({ ucid, nickname, account, avatarUrl, registerType }))\n  } else {\n    res.send(API_RES.showError('密码错误'))\n  }\n}\nconst handleUCLogin = async (req, res) => {\n  let { account, password } = req.body\n  let ts = moment().unix() * 1000\n  const appId = ucConfig.appID\n  const appkey = ucConfig.appkey\n  let formData = {\n    cid: appId,\n    un: account,\n    pw: password\n  }\n  let headers = {\n    ts,\n    appId\n  }\n  let sign = await UC.getSign(formData, headers, appkey)\n  headers.sign = sign\n  let loginResponse = await http.postForm(ucConfig.api + '/security/login', formData, {\n    headers\n  }).catch(err => {\n    Logger.warn('登录接口响应异常 err =>', _.get(err, ['response', 'data'], {}))\n    return _.set(\n      {},\n      ['data', 'msg'],\n      _.get(err, ['response', 'data'], {})\n    )\n  })\n  let ucid = _.get(loginResponse, ['data', 'data', 'uid'], 0)\n  let LoginErrorResponse = _.get(loginResponse, ['data', 'msg'], '登录失败')\n  if (ucid === 0) {\n    if (LoginErrorResponse === 'USER_NOT_EXIST') {\n      LoginErrorResponse = '用户名不存在'\n    } else {\n      if (LoginErrorResponse === 'PWD_INCORRECT') {\n        LoginErrorResponse = '密码错误'\n      }\n    }\n    res.send(API_RES.showError(LoginErrorResponse, 10001))\n    return\n  }\n  ts = moment().unix() * 1000\n  const params = {\n    ids: ucid\n  }\n  headers = {\n    ts,\n    appId\n  }\n  sign = UC.getSign(params, headers, appkey)\n  headers.sign = sign\n  let userInfoResponse = await http.get(ucConfig.api + '/ehr/user/agent', {\n    params,\n    headers\n  }).catch(err => {\n    Logger.warn('用户信息接口响应异常 err =>', _.get(err, ['response', 'data'], {}))\n    return _.set(\n      {},\n      ['data', 'msg'],\n      _.get(err, ['response', 'data'], {})\n    )\n  })\n  let userInfo = _.get(userInfoResponse, ['data', 'data', 0], {})\n  let userInfoError = _.get(userInfoResponse, ['data'], {})\n  if (_.isEmpty(userInfo)) {\n    res.send(API_RES.showError('用户信息获取失败, 请稍后再试', 10002, { userInfoError, ucid: ucid }))\n    return\n  }\n  // 从登录结果中提取数据\n  let mobile = _.get(userInfo, ['mobile'], '') // 手机号\n  let nickname = _.get(userInfo, ['name'], '') // 昵称\n  let email = _.get(userInfo, ['email'], `${account}@qq.com`) // 邮箱\n  let avatarUrl = _.get(userInfo, ['avatar'], MUser.DEFAULT_AVATAR_URL) // 头像\n\n  // 避免null值\n  if (_.isNil(mobile)) {\n    mobile = ''\n  }\n  if (_.isNil(nickname)) {\n    nickname = ''\n  }\n  if (_.isNil(email)) {\n    email = `${account}@qq.com`\n  }\n  if (_.isNil(avatarUrl)) {\n    avatarUrl = MUser.DEFAULT_AVATAR_URL\n  }\n\n  let user = await MUser.getByAccount(account)\n  if (_.isEmpty(user) === true || user.is_delete === 1) {\n    // 首次登录, 自动在系统中进行注册\n    let isRegisterSuccess = await MUser.register(account, {\n      account,\n      mobile,\n      ucid,\n      nickname,\n      email,\n      avatarUrl\n    })\n    if (isRegisterSuccess === false) {\n      res.send(API_RES.showError('uc登录失败, 请稍后再试'))\n      return\n    }\n    user = await MUser.getByAccount(account)\n  }\n\n  account = _.get(user, ['account'], '')\n  nickname = _.get(user, ['nickname'], '')\n  ucid = _.get(user, ['ucid'], '')\n  avatarUrl = _.get(user, ['avatar_url'], MUser.DEFAULT_AVATAR_URL)\n  let registerType = _.get(user, ['register_type'], MUser.REGISTER_TYPE_SITE)\n  let token = Auth.generateToken(ucid, account, nickname)\n  res.cookie('fee_token', token, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n  res.cookie('ucid', ucid, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n  res.cookie('nickname', nickname, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n  res.cookie('account', account, { maxAge: 100 * 86400 * 1000, httpOnly: false })\n  res.send(API_RES.showResult({ ucid, nickname, account, avatarUrl, registerType }))\n}\n\nexport default {\n  ...siteLogin,\n  ...ucLogin,\n  ...logout,\n  ...normalLogin,\n  ...getLoginType,\n  ...login\n}\n"],"file":"index.js"}