{"version":3,"sources":["index.js"],"names":["_","RouterConfigBuilder","API_RES","MProjetMember","MUser","http","ucConfig","Logger","moment","UC","add","routerConfigBuilder","METHOD_TYPE_POST","req","res","body","get","ucidList","role","ROLE_DEV","needAlarm","parseInt","createUcid","projectId","updateUcid","isInteger","send","showError","isAdmin","isOwner","isProjectOwner","noPrivilege","isEmpty","showResult","anyOneSuccess","ucid","rawUser","is_delete","ts","headers","appId","appID","appkey","sign","unix","params","ids","getSign","userInfoResponse","api","catch","err","warn","set","userInfo","account","mobile","nickname","email","avatarUrl","DEFAULT_AVATAR_URL","isNil","isRegisterSuccess","register","record","getByProjectIdAndUcid","insertData","project_id","need_alarm","create_ucid","update_ucid","isSuccess","id","isDelete","updateData","update","list","METHOD_TYPE_GET","rawProjectMemberList","getProjectMemberList","projectMemberResult","rawProjectMember","push","rawUserList","getUserListByUcid","userResult","memberList","resultItem","deleteProject","key","has"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,mBAAP,MAAgC,mDAAhC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CAEA;;AACA,IAAIC,GAAG,GAAGT,mBAAmB,CAACU,mBAApB,CAAwC,yBAAxC,EAAmEV,mBAAmB,CAACW,gBAAvF,EAAyG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACrI,MAAIC,IAAI,GAAGf,CAAC,CAACgB,GAAF,CAAMH,GAAN,EAAW,CAAC,MAAD,CAAX,EAAqB,EAArB,CAAX,CADqI,CAErI;;;AACA,MAAII,QAAQ,GAAGjB,CAAC,CAACgB,GAAF,CAAMD,IAAN,EAAY,CAAC,WAAD,CAAZ,EAA2B,EAA3B,CAAf;;AACA,MAAIG,IAAI,GAAGlB,CAAC,CAACgB,GAAF,CAAMD,IAAN,EAAY,CAAC,MAAD,CAAZ,EAAsBZ,aAAa,CAACgB,QAApC,CAAX;;AACA,MAAIC,SAAS,GAAGC,QAAQ,CAACrB,CAAC,CAACgB,GAAF,CAAMD,IAAN,EAAY,CAAC,YAAD,CAAZ,EAA4B,CAA5B,CAAD,CAAxB;;AACA,MAAIO,UAAU,GAAGtB,CAAC,CAACgB,GAAF,CAAMH,GAAN,EAAW,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,CAAX,EAAoC,GAApC,CAAjB;;AACA,MAAIU,SAAS,GAAGvB,CAAC,CAACgB,GAAF,CAAMH,GAAN,EAAW,CAAC,KAAD,EAAQ,SAAR,EAAmB,WAAnB,CAAX,EAA4C,CAA5C,CAAhB;;AACA,MAAIW,UAAU,GAAGF,UAAjB;;AACA,MAAItB,CAAC,CAACyB,SAAF,CAAYL,SAAZ,MAA2B,KAA/B,EAAsC;AACpCN,IAAAA,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAACyB,SAAR,CAAkB,eAAlB,CAAT;AACD,GAXoI,CAarI;;;AACA,MAAIC,OAAO,GAAG,MAAMxB,KAAK,CAACwB,OAAN,CAAcN,UAAd,CAApB;AACA,MAAIO,OAAO,GAAG,MAAM1B,aAAa,CAAC2B,cAAd,CAA6BP,SAA7B,EAAwCD,UAAxC,CAApB;;AACA,MAAIM,OAAO,KAAK,KAAZ,IAAqBC,OAAO,KAAK,KAArC,EAA4C;AAC1C,WAAOf,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAAC6B,WAAR,CAAoB,iBAApB,CAAT,CAAP;AACD;;AAED,MAAI/B,CAAC,CAACgC,OAAF,CAAUf,QAAV,CAAJ,EAAyB;AACvBH,IAAAA,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAAC+B,UAAR,CAAmB,EAAnB,EAAuB,MAAvB,CAAT;AACA;AACD;;AAED,MAAIC,aAAa,GAAG,KAApB;;AACA,OAAK,IAAIC,IAAT,IAAiBlB,QAAjB,EAA2B;AACzBkB,IAAAA,IAAI,GAAGd,QAAQ,CAACc,IAAD,CAAf;;AACA,QAAInC,CAAC,CAACyB,SAAF,CAAYU,IAAZ,MAAsB,KAAtB,IAA+BA,IAAI,IAAI,CAA3C,EAA8C;AAC5C;AACA;AACD,KALwB,CAMzB;;;AACA,UAAMC,OAAO,GAAG,MAAMhC,KAAK,CAACY,GAAN,CAAUmB,IAAV,CAAtB;;AACA,QAAInC,CAAC,CAACgC,OAAF,CAAUI,OAAV,KAAsBA,OAAO,CAACC,SAAR,KAAsB,CAAhD,EAAmD;AACjD,UAAIC,EAAJ;AACA,UAAIC,OAAJ;AACA,YAAMC,KAAK,GAAGlC,QAAQ,CAACmC,KAAvB;AACA,YAAMC,MAAM,GAAGpC,QAAQ,CAACoC,MAAxB;AACA,UAAIC,IAAJ;AACAL,MAAAA,EAAE,GAAG9B,MAAM,GAAGoC,IAAT,KAAkB,IAAvB;AACA,YAAMC,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAEX;AADQ,OAAf;AAGAI,MAAAA,OAAO,GAAG;AACRD,QAAAA,EADQ;AAERE,QAAAA;AAFQ,OAAV;AAIAG,MAAAA,IAAI,GAAGlC,EAAE,CAACsC,OAAH,CAAWF,MAAX,EAAmBN,OAAnB,EAA4BG,MAA5B,CAAP;AACAH,MAAAA,OAAO,CAACI,IAAR,GAAeA,IAAf;AACA,UAAIK,gBAAgB,GAAG,MAAM3C,IAAI,CAACW,GAAL,CAASV,QAAQ,CAAC2C,GAAT,GAAe,iBAAxB,EAA2C;AACtEJ,QAAAA,MADsE;AAEtEN,QAAAA;AAFsE,OAA3C,EAG1BW,KAH0B,CAGpBC,GAAG,IAAI;AACd5C,QAAAA,MAAM,CAAC6C,IAAP,CAAY,mBAAZ,EAAiCpD,CAAC,CAACgB,GAAF,CAAMmC,GAAN,EAAW,CAAC,UAAD,EAAa,MAAb,CAAX,EAAiC,EAAjC,CAAjC;AACA,eAAOnD,CAAC,CAACqD,GAAF,CACL,EADK,EAEL,CAAC,MAAD,EAAS,KAAT,CAFK,EAGLrD,CAAC,CAACgB,GAAF,CAAMmC,GAAN,EAAW,CAAC,UAAD,EAAa,MAAb,CAAX,EAAiC,EAAjC,CAHK,CAAP;AAKD,OAV4B,CAA7B;;AAWA,UAAIG,QAAQ,GAAGtD,CAAC,CAACgB,GAAF,CAAMgC,gBAAN,EAAwB,CAAC,MAAD,EAAS,MAAT,EAAiB,CAAjB,CAAxB,EAA6C,EAA7C,CAAf;;AACA,UAAIhD,CAAC,CAACgC,OAAF,CAAUsB,QAAV,CAAJ,EAAyB;AACvB;AACD,OA9BgD,CA+BjD;;;AACA,UAAIC,OAAO,GAAGvD,CAAC,CAACgB,GAAF,CAAMsC,QAAN,EAAgB,CAAC,SAAD,CAAhB,EAA6B,EAA7B,CAAd;;AACA,UAAIE,MAAM,GAAGxD,CAAC,CAACgB,GAAF,CAAMsC,QAAN,EAAgB,CAAC,QAAD,CAAhB,EAA4B,EAA5B,CAAb,CAjCiD,CAiCJ;;;AAC7C,UAAIG,QAAQ,GAAGzD,CAAC,CAACgB,GAAF,CAAMsC,QAAN,EAAgB,CAAC,MAAD,CAAhB,EAA0B,EAA1B,CAAf,CAlCiD,CAkCJ;;;AAC7C,UAAII,KAAK,GAAG1D,CAAC,CAACgB,GAAF,CAAMsC,QAAN,EAAgB,CAAC,OAAD,CAAhB,EAA4B,GAAEC,OAAQ,SAAtC,CAAZ,CAnCiD,CAmCW;;;AAC5D,UAAII,SAAS,GAAG3D,CAAC,CAACgB,GAAF,CAAMsC,QAAN,EAAgB,CAAC,QAAD,CAAhB,EAA4BlD,KAAK,CAACwD,kBAAlC,CAAhB,CApCiD,CAoCqB;AAEtE;;;AACA,UAAI5D,CAAC,CAAC6D,KAAF,CAAQL,MAAR,CAAJ,EAAqB;AACnBA,QAAAA,MAAM,GAAG,EAAT;AACD;;AACD,UAAIxD,CAAC,CAAC6D,KAAF,CAAQJ,QAAR,CAAJ,EAAuB;AACrBA,QAAAA,QAAQ,GAAG,EAAX;AACD;;AACD,UAAIzD,CAAC,CAAC6D,KAAF,CAAQH,KAAR,CAAJ,EAAoB;AAClBA,QAAAA,KAAK,GAAI,GAAEH,OAAQ,SAAnB;AACD;;AACD,UAAIvD,CAAC,CAAC6D,KAAF,CAAQF,SAAR,CAAJ,EAAwB;AACtBA,QAAAA,SAAS,GAAGvD,KAAK,CAACwD,kBAAlB;AACD;;AAED,UAAIE,iBAAiB,GAAG,MAAM1D,KAAK,CAAC2D,QAAN,CAAeR,OAAf,EAAwB;AACpDA,QAAAA,OADoD;AAEpDC,QAAAA,MAFoD;AAGpDrB,QAAAA,IAHoD;AAIpDsB,QAAAA,QAJoD;AAKpDC,QAAAA,KALoD;AAMpDC,QAAAA;AANoD,OAAxB,CAA9B;;AAQA,UAAIG,iBAAiB,KAAK,KAA1B,EAAiC;AAC/B;AACD;AACF,KAvEwB,CAyEzB;;;AACA,QAAIE,MAAM,GAAG,MAAM7D,aAAa,CAAC8D,qBAAd,CAAoC1C,SAApC,EAA+CY,IAA/C,CAAnB,CA1EyB,CA4EzB;;AACA,QAAInC,CAAC,CAACgC,OAAF,CAAUgC,MAAV,CAAJ,EAAuB;AACrB,UAAIE,UAAU,GAAG;AACf/B,QAAAA,IADe;AAEfgC,QAAAA,UAAU,EAAE5C,SAFG;AAGfL,QAAAA,IAHe;AAIfkD,QAAAA,UAAU,EAAEhD,SAJG;AAKfiD,QAAAA,WAAW,EAAE/C,UALE;AAMfgD,QAAAA,WAAW,EAAE9C;AANE,OAAjB;AAQA,UAAI+C,SAAS,GAAG,MAAMpE,aAAa,CAACO,GAAd,CAAkBwD,UAAlB,CAAtB;AACAhC,MAAAA,aAAa,GAAGA,aAAa,IAAIqC,SAAjC;AACA;AACD;;AAED,UAAM;AAAEC,MAAAA,EAAF;AAAMnC,MAAAA,SAAS,EAAEoC;AAAjB,QAA8BT,MAApC;;AACA,QAAIS,QAAQ,KAAK,CAAjB,EAAoB;AAClB;AACA;AACD,KA/FwB,CAiGzB;;;AACA,QAAIC,UAAU,GAAG;AACfrC,MAAAA,SAAS,EAAE,CADI;AAEfiC,MAAAA,WAAW,EAAE9C,UAFE;AAGfN,MAAAA,IAHe;AAIfkD,MAAAA,UAAU,EAAEhD;AAJG,KAAjB;AAMA,QAAImD,SAAS,GAAG,MAAMpE,aAAa,CAACwE,MAAd,CAAqBH,EAArB,EAAyBE,UAAzB,CAAtB;AACAxC,IAAAA,aAAa,GAAGA,aAAa,IAAIqC,SAAjC;AACD;;AAED,MAAIrC,aAAJ,EAAmB;AACjBpB,IAAAA,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAAC+B,UAAR,CAAmB,EAAnB,EAAuB,MAAvB,CAAT;AACD,GAFD,MAEO;AACLnB,IAAAA,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAACyB,SAAR,CAAkB,EAAlB,EAAsB,UAAtB,CAAT;AACD;AACF,CA3IS,CAAV,C,CA6IA;;AACA,IAAIiD,IAAI,GAAG3E,mBAAmB,CAACU,mBAApB,CAAwC,0BAAxC,EAAoEV,mBAAmB,CAAC4E,eAAxF,EAAyG,OAAOhE,GAAP,EAAYC,GAAZ,KAAoB;AACtI,MAAIS,SAAS,GAAGvB,CAAC,CAACgB,GAAF,CAAMH,GAAN,EAAW,CAAC,KAAD,EAAQ,SAAR,EAAmB,WAAnB,CAAX,EAA4C,CAA5C,CAAhB,CADsI,CAGtI;;;AACA,MAAIiE,oBAAoB,GAAG,MAAM3E,aAAa,CAAC4E,oBAAd,CAAmCxD,SAAnC,CAAjC;AACA,MAAIyD,mBAAmB,GAAG,EAA1B;AACA,MAAI/D,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIgE,gBAAT,IAA6BH,oBAA7B,EAAmD;AACjD;AACAE,IAAAA,mBAAmB,CAACC,gBAAgB,CAAC9C,IAAlB,CAAnB,GAA6C;AAC3CqC,MAAAA,EAAE,EAAES,gBAAgB,CAACT,EADsB;AAE3CrC,MAAAA,IAAI,EAAE8C,gBAAgB,CAAC9C,IAFoB;AAG3CiC,MAAAA,UAAU,EAAEa,gBAAgB,CAAC,YAAD,CAHe;AAI3C/D,MAAAA,IAAI,EAAE+D,gBAAgB,CAAC/D;AAJoB,KAA7C,CAFiD,CASjD;;AACAD,IAAAA,QAAQ,CAACiE,IAAT,CAAcD,gBAAgB,CAAC9C,IAA/B;AACD,GAlBqI,CAmBtI;;;AACA,MAAIgD,WAAW,GAAG,MAAM/E,KAAK,CAACgF,iBAAN,CAAwBnE,QAAxB,CAAxB;AACA,MAAIoE,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIjD,OAAT,IAAoB+C,WAApB,EAAiC;AAC/B;AACAE,IAAAA,UAAU,CAACjD,OAAO,CAACD,IAAT,CAAV,GAA2B;AACzBsB,MAAAA,QAAQ,EAAErB,OAAO,CAACqB;AADO,KAA3B;AAGD,GA3BqI,CA4BtI;;;AACA,MAAI6B,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAInD,IAAT,IAAiBlB,QAAjB,EAA2B;AACzB,QAAIsE,UAAU,GAAG,EACf,GAAGP,mBAAmB,CAAC7C,IAAD,CADP;AAEf,SAAGkD,UAAU,CAAClD,IAAD;AAFE,KAAjB;AAIAmD,IAAAA,UAAU,CAACJ,IAAX,CAAgBK,UAAhB;AACD;;AAEDzE,EAAAA,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAAC+B,UAAR,CAAmBqD,UAAnB,CAAT;AACD,CAvCU,CAAX;AAyCA,IAAIE,aAAa,GAAGvF,mBAAmB,CAACU,mBAApB,CAAwC,4BAAxC,EAAsEV,mBAAmB,CAAC4E,eAA1F,EAA2G,OAAOhE,GAAP,EAAYC,GAAZ,KAAoB;AACjJ,MAAI0D,EAAE,GAAGnD,QAAQ,CAACrB,CAAC,CAACgB,GAAF,CAAMH,GAAN,EAAW,CAAC,OAAD,EAAU,IAAV,CAAX,EAA4B,CAA5B,CAAD,CAAjB;;AACA,MAAIU,SAAS,GAAGvB,CAAC,CAACgB,GAAF,CAAMH,GAAN,EAAW,CAAC,KAAD,EAAQ,SAAR,EAAmB,WAAnB,CAAX,EAA4C,CAA5C,CAAhB;;AACA,MAAIW,UAAU,GAAGH,QAAQ,CAACrB,CAAC,CAACgB,GAAF,CAAMH,GAAN,EAAW,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,CAAX,EAAoC,GAApC,CAAD,CAAzB;;AAEA,MAAIb,CAAC,CAACyB,SAAF,CAAY+C,EAAZ,MAAoB,KAAxB,EAA+B;AAC7B1D,IAAAA,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAACyB,SAAR,CAAkB,MAAlB,CAAT;AACA;AACD,GARgJ,CAUjJ;;;AACA,MAAIC,OAAO,GAAG,MAAMxB,KAAK,CAACwB,OAAN,CAAcJ,UAAd,CAApB;AACA,MAAIK,OAAO,GAAG,MAAM1B,aAAa,CAAC2B,cAAd,CAA6BP,SAA7B,EAAwCC,UAAxC,CAApB;;AACA,MAAII,OAAO,KAAK,KAAZ,IAAqBC,OAAO,KAAK,KAArC,EAA4C;AAC1C,WAAOf,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAAC6B,WAAR,CAAoB,iBAApB,CAAT,CAAP;AACD;;AAED,MAAI2C,UAAU,GAAG;AACfrC,IAAAA,SAAS,EAAE,CADI;AAEfiC,IAAAA,WAAW,EAAE9C;AAFE,GAAjB;AAIA,MAAI+C,SAAS,GAAG,MAAMpE,aAAa,CAACwE,MAAd,CAAqBH,EAArB,EAAyBE,UAAzB,CAAtB;;AACA,MAAIH,SAAJ,EAAe;AACbzD,IAAAA,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAAC+B,UAAR,CAAmB,EAAnB,EAAuB,MAAvB,CAAT;AACD,GAFD,MAEO;AACLnB,IAAAA,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAACyB,SAAR,CAAkB,MAAlB,CAAT;AACD;AACF,CA3BmB,CAApB;AA6BA,IAAIgD,MAAM,GAAG1E,mBAAmB,CAACU,mBAApB,CAAwC,4BAAxC,EAAsEV,mBAAmB,CAACW,gBAA1F,EAA4G,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC3I,MAAIC,IAAI,GAAGf,CAAC,CAACgB,GAAF,CAAMH,GAAN,EAAW,CAAC,MAAD,CAAX,EAAqB,EAArB,CAAX;;AACA,MAAI2D,EAAE,GAAGnD,QAAQ,CAACrB,CAAC,CAACgB,GAAF,CAAMD,IAAN,EAAY,CAAC,IAAD,CAAZ,CAAD,EAAsB,CAAtB,CAAjB;;AACA,MAAIS,UAAU,GAAGxB,CAAC,CAACgB,GAAF,CAAMH,GAAN,EAAW,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,CAAX,EAAoC,GAApC,CAAjB;;AACA,MAAIU,SAAS,GAAGvB,CAAC,CAACgB,GAAF,CAAMH,GAAN,EAAW,CAAC,KAAD,EAAQ,SAAR,EAAmB,WAAnB,CAAX,EAA4C,CAA5C,CAAhB;;AACA,MAAI6D,UAAU,GAAG;AACfJ,IAAAA,WAAW,EAAE9C;AADE,GAAjB;;AAGA,OAAK,IAAIiE,GAAT,IAAgB,CACd,MADc,EAEd,YAFc,CAAhB,EAGG;AACD,QAAIzF,CAAC,CAAC0F,GAAF,CAAM3E,IAAN,EAAY,CAAC0E,GAAD,CAAZ,CAAJ,EAAwB;AACtBf,MAAAA,UAAU,CAACe,GAAD,CAAV,GAAkBzF,CAAC,CAACgB,GAAF,CAAMD,IAAN,EAAY,CAAC0E,GAAD,CAAZ,EAAmB,EAAnB,CAAlB;AACD;AACF;;AAED,MAAIzF,CAAC,CAAC0F,GAAF,CAAMhB,UAAN,EAAkB,CAAC,MAAD,CAAlB,CAAJ,EAAiC;AAC/B;AACA,QAAI9C,OAAO,GAAG,MAAMxB,KAAK,CAACwB,OAAN,CAAcJ,UAAd,CAApB;AACA,QAAIK,OAAO,GAAG,MAAM1B,aAAa,CAAC2B,cAAd,CAA6BP,SAA7B,EAAwCC,UAAxC,CAApB;;AACA,QAAII,OAAO,KAAK,KAAZ,IAAqBC,OAAO,KAAK,KAArC,EAA4C;AAC1C,aAAOf,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAAC6B,WAAR,CAAoB,iBAApB,CAAT,CAAP;AACD;AACF;;AAED,MAAIwC,SAAS,GAAG,MAAMpE,aAAa,CAACwE,MAAd,CAAqBH,EAArB,EAAyBE,UAAzB,CAAtB;;AAEA,MAAIH,SAAJ,EAAe;AACbzD,IAAAA,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAAC+B,UAAR,CAAmB,EAAnB,EAAuB,MAAvB,CAAT;AACD,GAFD,MAEO;AACLnB,IAAAA,GAAG,CAACY,IAAJ,CAASxB,OAAO,CAACyB,SAAR,CAAkB,MAAlB,CAAT;AACD;AACF,CAjCY,CAAb;AAmCA,eAAe,EACb,GAAGjB,GADU;AAEb,KAAGkE,IAFU;AAGb,KAAGY,aAHU;AAIb,KAAGb;AAJU,CAAf","sourcesContent":["/**\n * 项目成员处理\n */\nimport _ from 'lodash'\nimport RouterConfigBuilder from '~/src/library/utils/modules/router_config_builder'\nimport API_RES from '~/src/constants/api_res'\nimport MProjetMember from '~/src/model/project/project_member'\nimport MUser from '~/src/model/project/user'\nimport http from '~/src/library/http'\nimport ucConfig from '~/src/configs/user_center'\nimport Logger from '~/src/library/logger'\nimport moment from 'moment'\nimport UC from '~/src/library/uc'\n\n// 添加项目成员，要获取项目id(在路由里)，ucid(body里)，role(body里)，need_alarm(body里)\nlet add = RouterConfigBuilder.routerConfigBuilder('/api/project/member/add', RouterConfigBuilder.METHOD_TYPE_POST, async (req, res) => {\n  let body = _.get(req, ['body'], {})\n  // 支持按ucidList添加\n  let ucidList = _.get(body, ['ucid_list'], [])\n  let role = _.get(body, ['role'], MProjetMember.ROLE_DEV)\n  let needAlarm = parseInt(_.get(body, ['need_alarm'], 0))\n  let createUcid = _.get(req, ['fee', 'user', 'ucid'], '0')\n  let projectId = _.get(req, ['fee', 'project', 'projectId'], 0)\n  let updateUcid = createUcid\n  if (_.isInteger(needAlarm) === false) {\n    res.send(API_RES.showError('needAlarm参数错误'))\n  }\n\n  // 检查权限\n  let isAdmin = await MUser.isAdmin(createUcid)\n  let isOwner = await MProjetMember.isProjectOwner(projectId, createUcid)\n  if (isAdmin === false && isOwner === false) {\n    return res.send(API_RES.noPrivilege('只有组长和管理员才可以调整成员'))\n  }\n\n  if (_.isEmpty(ucidList)) {\n    res.send(API_RES.showResult([], '添加完毕'))\n    return\n  }\n\n  let anyOneSuccess = false\n  for (let ucid of ucidList) {\n    ucid = parseInt(ucid)\n    if (_.isInteger(ucid) === false || ucid <= 0) {\n      // ucid不合法\n      continue\n    }\n    // 检查user里是否有ucid对应的记录\n    const rawUser = await MUser.get(ucid)\n    if (_.isEmpty(rawUser) || rawUser.is_delete === 1) {\n      let ts\n      let headers\n      const appId = ucConfig.appID\n      const appkey = ucConfig.appkey\n      let sign\n      ts = moment().unix() * 1000\n      const params = {\n        ids: ucid\n      }\n      headers = {\n        ts,\n        appId\n      }\n      sign = UC.getSign(params, headers, appkey)\n      headers.sign = sign\n      let userInfoResponse = await http.get(ucConfig.api + '/ehr/user/agent', {\n        params,\n        headers\n      }).catch(err => {\n        Logger.warn('用户信息接口响应异常 err =>', _.get(err, ['response', 'data'], {}))\n        return _.set(\n          {},\n          ['data', 'msg'],\n          _.get(err, ['response', 'data'], {})\n        )\n      })\n      let userInfo = _.get(userInfoResponse, ['data', 'data', 0], {})\n      if (_.isEmpty(userInfo)) {\n        continue\n      }\n      // 从登录结果中提取数据\n      let account = _.get(userInfo, ['account'], '')\n      let mobile = _.get(userInfo, ['mobile'], '') // 手机号\n      let nickname = _.get(userInfo, ['name'], '') // 昵称\n      let email = _.get(userInfo, ['email'], `${account}@qq.com`) // 邮箱\n      let avatarUrl = _.get(userInfo, ['avatar'], MUser.DEFAULT_AVATAR_URL) // 头像\n\n      // 避免null值\n      if (_.isNil(mobile)) {\n        mobile = ''\n      }\n      if (_.isNil(nickname)) {\n        nickname = ''\n      }\n      if (_.isNil(email)) {\n        email = `${account}@qq.com`\n      }\n      if (_.isNil(avatarUrl)) {\n        avatarUrl = MUser.DEFAULT_AVATAR_URL\n      }\n\n      let isRegisterSuccess = await MUser.register(account, {\n        account,\n        mobile,\n        ucid,\n        nickname,\n        email,\n        avatarUrl\n      })\n      if (isRegisterSuccess === false) {\n        continue\n      }\n    }\n\n    // 检查数据库中，该项目是否存在此ucid，一个人在数据库中不能添加两次\n    let record = await MProjetMember.getByProjectIdAndUcid(projectId, ucid)\n\n    // 不在数据库中, 直接添加到列表中\n    if (_.isEmpty(record)) {\n      let insertData = {\n        ucid,\n        project_id: projectId,\n        role,\n        need_alarm: needAlarm,\n        create_ucid: createUcid,\n        update_ucid: updateUcid\n      }\n      let isSuccess = await MProjetMember.add(insertData)\n      anyOneSuccess = anyOneSuccess || isSuccess\n      continue\n    }\n\n    const { id, is_delete: isDelete } = record\n    if (isDelete === 0) {\n      // 已有数据, continue\n      continue\n    }\n\n    // 已有数据, 但被删掉了, 还原之\n    let updateData = {\n      is_delete: 0,\n      update_ucid: updateUcid,\n      role,\n      need_alarm: needAlarm\n    }\n    let isSuccess = await MProjetMember.update(id, updateData)\n    anyOneSuccess = anyOneSuccess || isSuccess\n  }\n\n  if (anyOneSuccess) {\n    res.send(API_RES.showResult([], '添加完毕'))\n  } else {\n    res.send(API_RES.showError([], '添加失败,请重试'))\n  }\n})\n\n// 获取当前项目的所有成员 project_id(在路由里)\nlet list = RouterConfigBuilder.routerConfigBuilder('/api/project/member/list', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let projectId = _.get(req, ['fee', 'project', 'projectId'], 0)\n\n  // 获取projectMemberList，全部数据都拿到遍历数据\n  let rawProjectMemberList = await MProjetMember.getProjectMemberList(projectId)\n  let projectMemberResult = {}\n  let ucidList = []\n  for (let rawProjectMember of rawProjectMemberList) {\n    // 把（role,id,need_alarm）放到projectMemberResult里，ucid作为key\n    projectMemberResult[rawProjectMember.ucid] = {\n      id: rawProjectMember.id,\n      ucid: rawProjectMember.ucid,\n      need_alarm: rawProjectMember['need_alarm'],\n      role: rawProjectMember.role\n    }\n\n    // 从里面获取到用户的ucid list\n    ucidList.push(rawProjectMember.ucid)\n  }\n  // 根据ucid list去查nickname\n  let rawUserList = await MUser.getUserListByUcid(ucidList)\n  let userResult = {}\n  for (let rawUser of rawUserList) {\n    // 把(nickname)拿出来放到userResult里，ucid作为key\n    userResult[rawUser.ucid] = {\n      nickname: rawUser.nickname\n    }\n  }\n  // 遍历ucid从projectMemberResult里获取id, need_alarm, role,从useResult里获取nickname\n  let memberList = []\n  for (let ucid of ucidList) {\n    let resultItem = {\n      ...projectMemberResult[ucid],\n      ...userResult[ucid]\n    }\n    memberList.push(resultItem)\n  }\n\n  res.send(API_RES.showResult(memberList))\n})\n\nlet deleteProject = RouterConfigBuilder.routerConfigBuilder('/api/project/member/delete', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  let id = parseInt(_.get(req, ['query', 'id'], 0))\n  let projectId = _.get(req, ['fee', 'project', 'projectId'], 1)\n  let updateUcid = parseInt(_.get(req, ['fee', 'user', 'ucid'], '0'))\n\n  if (_.isInteger(id) === false) {\n    res.send(API_RES.showError('参数错误'))\n    return\n  }\n\n  // 检查权限\n  let isAdmin = await MUser.isAdmin(updateUcid)\n  let isOwner = await MProjetMember.isProjectOwner(projectId, updateUcid)\n  if (isAdmin === false && isOwner === false) {\n    return res.send(API_RES.noPrivilege('只有组长和管理员才可以调整成员'))\n  }\n\n  let updateData = {\n    is_delete: 1,\n    update_ucid: updateUcid\n  }\n  let isSuccess = await MProjetMember.update(id, updateData)\n  if (isSuccess) {\n    res.send(API_RES.showResult([], '删除成功'))\n  } else {\n    res.send(API_RES.showError('删除失败'))\n  }\n})\n\nlet update = RouterConfigBuilder.routerConfigBuilder('/api/project/member/update', RouterConfigBuilder.METHOD_TYPE_POST, async (req, res) => {\n  let body = _.get(req, ['body'], {})\n  let id = parseInt(_.get(body, ['id']), 0)\n  let updateUcid = _.get(req, ['fee', 'user', 'ucid'], '0')\n  let projectId = _.get(req, ['fee', 'project', 'projectId'], 1)\n  let updateData = {\n    update_ucid: updateUcid\n  }\n  for (let key of [\n    'role',\n    'need_alarm'\n  ]) {\n    if (_.has(body, [key])) {\n      updateData[key] = _.get(body, [key], '')\n    }\n  }\n\n  if (_.has(updateData, ['role'])) {\n    // 修改角色前先检查权限\n    let isAdmin = await MUser.isAdmin(updateUcid)\n    let isOwner = await MProjetMember.isProjectOwner(projectId, updateUcid)\n    if (isAdmin === false && isOwner === false) {\n      return res.send(API_RES.noPrivilege('只有组长和管理员才可以调整成员'))\n    }\n  }\n\n  let isSuccess = await MProjetMember.update(id, updateData)\n\n  if (isSuccess) {\n    res.send(API_RES.showResult([], '更新成功'))\n  } else {\n    res.send(API_RES.showError('更新失败'))\n  }\n})\n\nexport default {\n  ...add,\n  ...list,\n  ...deleteProject,\n  ...update\n}\n"],"file":"index.js"}