{"version":3,"sources":["index.js"],"names":["_","RouterConfigBuilder","API_RES","moment","DATE_FORMAT","MNewUserSummary","MCityDistribution","PROVINCE_LIST","distributionByLine","routerConfigBuilder","METHOD_TYPE_GET","req","res","query","get","st","parseInt","unix","et","type","country","province","city","filterBy","projectId","isInteger","send","showError","timeList","UNIT","HOUR","timeAt","timeStr","format","DATABASE_BY_HOUR","push","DAY","DATABASE_BY_DAY","rawRecordList","getNewUserDistribution","result","rawRecord","count_at_time","countAtTime","total_count","totalCount","count_type","countType","key","getKey","resultItem","value","city_distribute_id","cityDistributeId","cityDistributionJson","getCityDistributionRecord","provinceJson","sum","getCountUnderProvince","isEmpty","time","showResult","distributionByMap","field","resultMap","split","join","Object","keys","has","provinceName","name","timeMoment","date","DISPLAY_BY_DAY","hour","provinceMap"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport RouterConfigBuilder from '~/src/library/utils/modules/router_config_builder'\nimport API_RES from '~/src/constants/api_res'\nimport moment from 'moment'\nimport DATE_FORMAT from '~/src/constants/date_format'\nimport MNewUserSummary from '~/src/model/summary/new_user_summary'\nimport MCityDistribution from '~/src/model/parse/city_distribution'\nimport PROVINCE_LIST from '~/src/constants/province'\n\nlet distributionByLine = RouterConfigBuilder.routerConfigBuilder('/api/project/summary/new_user/distribution_line', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  const query = _.get(req, ['query'], {})\n  let st = parseInt(_.get(query, ['st'], moment().unix() * 1000))\n  let et = parseInt(_.get(query, ['et'], moment().unix() * 1000))\n  const type = _.get(query, ['type'], 'country')\n  const country = _.get(query, ['country'], '中国')\n  const province = _.get(query, ['province'], '')\n  const city = _.get(query, ['city'], '')\n  const filterBy = _.get(query, ['filterBy'], '')\n  const projectId = _.get(req, ['fee', 'project', 'projectId'], 1)\n  if (_.isInteger(st) === false || _.isInteger(et) === false) {\n    res.send(API_RES.showError('st或et格式不正确'))\n    return\n  }\n\n  st = st / 1000\n  et = et / 1000\n  let timeList = []\n  switch (filterBy) {\n    case DATE_FORMAT.UNIT.HOUR:\n      for (let timeAt = st; timeAt <= et; timeAt += 3600) {\n        let timeStr = moment.unix(timeAt).format(DATE_FORMAT.DATABASE_BY_HOUR)\n        timeList.push(timeStr)\n      }\n      break\n    case DATE_FORMAT.UNIT.DAY:\n      for (let timeAt = st; timeAt <= et; timeAt += 3600 * 24) {\n        let timeStr = moment.unix(timeAt).format(DATE_FORMAT.DATABASE_BY_DAY)\n        timeList.push(timeStr)\n      }\n      break\n    default:\n      res.send(API_RES.showError('filterBy不合法'))\n      return\n  }\n\n  let rawRecordList = await MNewUserSummary.getNewUserDistribution(projectId, filterBy, timeList)\n  let result = []\n  switch (type) {\n    case 'country':\n      for (let rawRecord of rawRecordList) {\n        const { count_at_time: countAtTime, total_count: totalCount, count_type: countType } = rawRecord\n        let key = getKey(countType, countAtTime)\n        let resultItem = {\n          key,\n          value: totalCount\n        }\n        result.push(resultItem)\n      }\n      break\n    case 'province':\n      for (let rawRecord of rawRecordList) {\n        const {\n          count_at_time: countAtTime,\n          count_type: countType,\n          city_distribute_id: cityDistributeId\n        } = rawRecord\n        let key = getKey(countType, countAtTime)\n        let cityDistributionJson = await MCityDistribution.getCityDistributionRecord(cityDistributeId, projectId, moment(countAtTime, 'YYYY-MM-DD_HH').unix())\n        let provinceJson = _.get(cityDistributionJson, [country, province], {})\n        let sum = getCountUnderProvince(provinceJson)\n        let resultItem\n        resultItem = {\n          key,\n          value: sum\n        }\n        result.push(resultItem)\n      }\n      break\n    case 'city':\n      break\n    default:\n      res.send(API_RES.showError('type不合法'))\n      return\n  }\n\n  // 如果结果是空，则返回value是0的数据\n  if (_.isEmpty(result)) {\n    for (let time of timeList) {\n      let key = getKey(filterBy, time)\n      let resultItem = {\n        key,\n        value: 0\n      }\n      result.push(resultItem)\n    }\n  }\n  res.send(API_RES.showResult(result))\n})\n\nlet distributionByMap = RouterConfigBuilder.routerConfigBuilder('/api/project/summary/new_user/distribution_map', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  const query = _.get(req, ['query'], {})\n  let st = parseInt(_.get(query, ['st'], moment().unix() * 1000))\n  let et = parseInt(_.get(query, ['et'], moment().unix() * 1000))\n  let field = _.get(query, ['field'], '')\n  let projectId = _.get(req, ['fee', 'project', 'projectId'], 1)\n  if (_.isInteger(st) === false || _.isInteger(et) === false) {\n    res.send(API_RES.showError('st或et格式不对'))\n    return\n  }\n\n  st = st / 1000\n  et = et / 1000\n  let timeList = []\n  for (let timeAt = st; timeAt <= et; timeAt += 3600 * 24) {\n    let timeStr = moment.unix(timeAt).format(DATE_FORMAT.DATABASE_BY_DAY)\n    timeList.push(timeStr)\n  }\n\n  let resultMap = {}\n  let rawRecordList = await MNewUserSummary.getNewUserDistribution(projectId, 'day', timeList)\n  switch (field) {\n    case 'province':\n      for (let rawRecord of rawRecordList) {\n        const {\n          count_at_time: countAtTime,\n          city_distribute_id: cityDistributeId\n        } = rawRecord\n        let cityDistributionJson = await MCityDistribution.getCityDistributionRecord(cityDistributeId, projectId, moment(countAtTime.split('_').join(' ')).unix())\n        let provinceJson = _.get(cityDistributionJson, ['中国'], {})\n        for (let province of Object.keys(provinceJson)) {\n          let sum = getCountUnderProvince(provinceJson[province])\n          if (_.has(resultMap, [province])) {\n            resultMap[province] += sum\n          } else {\n            resultMap[province] = sum\n          }\n        }\n      }\n      break\n    default:\n      res.send(API_RES.showError('field不合法'))\n      return\n  }\n\n  // 检查各个省是否存在，如果不存在设为0\n  for (let province of PROVINCE_LIST) {\n    if (_.has(resultMap, [province]) === false) {\n      resultMap[province] = 0\n    }\n  }\n\n  let result = []\n  for (let provinceName of Object.keys(resultMap)) {\n    let resultItem = {\n      name: provinceName,\n      value: resultMap[provinceName]\n    }\n    result.push(resultItem)\n  }\n  res.send(API_RES.showResult(result))\n})\n\n/**\n * 根据type将time字符串拼接为展示形式\n * @param {string} type\n * @param {string} time\n */\nfunction getKey (type, time) {\n  let key = ''\n  if (type === DATE_FORMAT.UNIT.HOUR) {\n    let timeMoment = moment(time, DATE_FORMAT.DATABASE_BY_HOUR)\n    let date = timeMoment.format(DATE_FORMAT.DISPLAY_BY_DAY)\n    let hour = timeMoment.hour()\n    key += date + ' ' + hour + ':00~' + hour + ':59'\n  }\n  if (type === DATE_FORMAT.UNIT.DAY) {\n    key += time + ' 00:00~23:59'\n  }\n  return key\n}\n\n/**\n * 计算省下各个城市值得总和\n * @param {object} provinceMap\n */\nfunction getCountUnderProvince (provinceMap) {\n  let sum = 0\n  for (let key of Object.keys(provinceMap)) {\n    sum += provinceMap[key]\n  }\n  return sum\n}\nexport default {\n  ...distributionByLine,\n  ...distributionByMap\n}\n"],"file":"index.js"}