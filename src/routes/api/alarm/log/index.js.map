{"version":3,"sources":["index.js"],"names":["_","RouterConfigBuilder","API_RES","moment","MAlarmLog","DATE_FORMAT","getAlarmLog","routerConfigBuilder","METHOD_TYPE_GET","req","res","nowMoment","sevenDaysAgoMoment","clone","subtract","UNIT","DAY","startAt","parseInt","get","unix","endAt","projectId","isInteger","send","showError","rawRecordList","getAlarmLogInRange","recordList","sort","a","b","showResult","getLineAlarmLog","format","query","isShowDay","formatTimeString","timeSet","getTimeSetByHour","rawResultList","getLineAlarmLogInRange","resultList","configIdMap","showNameMap","rawResult","log_count","logCount","group_by","sendTime","config_id","configId","error_name","errorName","has","set","Set","showName","delete","transformTimeString","push","index","value","name","Object","keys","timeString","formatString","length","timeStr","startMoment","endMoment","timeAt","add"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport RouterConfigBuilder from '~/src/library/utils/modules/router_config_builder'\nimport API_RES from '~/src/constants/api_res'\nimport moment from 'moment'\nimport MAlarmLog from '~/src/model/project/alarm/alarm_log'\nimport DATE_FORMAT from '~/src/constants/date_format'\n\nconst getAlarmLog = RouterConfigBuilder.routerConfigBuilder('/api/alarm/log', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  const nowMoment = moment()\n  const sevenDaysAgoMoment = nowMoment.clone().subtract(7, DATE_FORMAT.UNIT.DAY)\n  let startAt = parseInt(_.get(req, ['query', 'st'], sevenDaysAgoMoment.unix() * 1000))\n  let endAt = parseInt(_.get(req, ['query', 'et'], nowMoment.unix() * 1000))\n  const projectId = _.get(req, ['fee', 'project', 'projectId'], 1)\n\n  if (_.isInteger(startAt) === false || _.isInteger(endAt) === false) {\n    res.send(API_RES.showError('et或st格式不对'))\n  }\n\n  // 将时间戳换成秒级\n  startAt = startAt / 1000\n  endAt = endAt / 1000\n  let rawRecordList = await MAlarmLog.getAlarmLogInRange(projectId, startAt, endAt)\n  let recordList = rawRecordList.sort((a, b) => b['send_at'] - a['send_at'])\n  res.send(API_RES.showResult(recordList))\n})\n\nconst getLineAlarmLog = RouterConfigBuilder.routerConfigBuilder('/api/alarm/log/line', RouterConfigBuilder.METHOD_TYPE_GET, async (req, res) => {\n  const nowMoment = moment(moment().format('YYYY-MM-DD HH:00'))\n  const sevenDaysAgoMoment = moment(nowMoment.clone().subtract(7, DATE_FORMAT.UNIT.DAY).format('YYYY-MM-DD HH:59'))\n  const query = _.get(req, ['query'], {})\n  const startAt = parseInt(_.get(query, ['st'], sevenDaysAgoMoment.unix()))\n  const endAt = parseInt(_.get(query, ['et'], nowMoment.unix()))\n  const projectId = _.get(req, ['fee', 'project', 'projectId'], 1)\n  const isShowDay = moment.unix(startAt).format('YYYY-MM-DD') !== moment.unix(endAt).format('YYYY-MM-DD')\n  let formatTimeString\n  if (isShowDay) {\n    formatTimeString = 'YYYY-MM-DD HH:00~HH:59'\n  } else {\n    formatTimeString = 'HH:00~HH:59'\n  }\n  if (_.isInteger(startAt) === false || _.isInteger(endAt) === false) {\n    res.send(API_RES.showError('st或et格式错误'))\n    return\n  }\n  let timeSet = getTimeSetByHour(startAt, endAt)\n  let rawResultList = await MAlarmLog.getLineAlarmLogInRange(projectId, startAt, endAt)\n  let resultList = []\n  let configIdMap = {}\n  let showNameMap = {}\n  for (let rawResult of rawResultList) {\n    let {\n      log_count: logCount,\n      group_by: sendTime,\n      config_id: configId,\n      error_name: errorName\n    } = rawResult\n    if (_.has(configIdMap, [configId]) === false) {\n      _.set(configIdMap, [configId], new Set(timeSet))\n    }\n    let showName = ' 配置ID:' + configId + '  监控错误:' + errorName\n    configIdMap[configId].delete(sendTime)\n    showNameMap[configId] = showName\n    sendTime = transformTimeString(sendTime, formatTimeString)\n    resultList.push({\n      index: sendTime,\n      value: logCount,\n      name: showName\n    })\n  }\n  // 补全没有的数据\n  for (let configId of Object.keys(configIdMap)) {\n    for (let timeString of configIdMap[configId]) {\n      let formatString = transformTimeString(timeString, formatTimeString)\n      resultList.push({\n        index: formatString,\n        value: 0,\n        name: showNameMap[configId]\n      })\n    }\n  }\n  // 如果查询的时间范围内没有数据，则返回空数据\n  if (resultList.length === 0) {\n    for (let timeStr of timeSet) {\n      let formatString = transformTimeString(timeStr, formatTimeString)\n      resultList.push({\n        index: formatString,\n        value: 0,\n        name: ''\n      })\n    }\n  }\n  resultList.sort((a, b) => {\n    return moment(a['index'], formatTimeString).unix() - moment(b['index'], formatTimeString).unix()\n  })\n  res.send(API_RES.showResult(resultList))\n})\n\nfunction getTimeSetByHour (startAt, endAt) {\n  let timeSet = new Set()\n  let startMoment = moment(moment.unix(startAt).format('YYYY-MM-DD HH:00:00'))\n  let endMoment = moment(moment.unix(endAt).format('YYYY-MM-DD HH:59:59'))\n  for (let timeAt = startMoment.unix(); timeAt <= endMoment.unix(); timeAt += 3600) {\n    let timeString = moment.unix(timeAt).format('YYYY-MM-DD HH')\n    timeSet.add(timeString)\n  }\n  return timeSet\n}\n\nfunction transformTimeString (timeString, formatTimeString) {\n  return moment(timeString).format(formatTimeString)\n}\nexport default {\n  ...getAlarmLog,\n  ...getLineAlarmLog\n}\n"],"file":"index.js"}