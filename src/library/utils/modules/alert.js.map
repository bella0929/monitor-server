{"version":3,"sources":["alert.js"],"names":["_","md5","http","NetworkUtil","alarmConfig","commonConfig","MAX_CONTENT_CHAR","wxAddr","get","app","isUsingAlarm","sendMessage","rawUcidList","message","sendWXMessage","isArray","isEmpty","isString","length","localIpList","getLocalIpList","localIpStr","join","ucidList","rawUcid","ucid","parseInt","substr","push","uniq","sendList","massageId","substring","totalCount","lastIndex","subContent","massage","content","post","JSON","stringify"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport md5 from 'md5'\nimport http from '~/src/library/http'\nimport NetworkUtil from '~/src/library/utils/modules/network'\nimport alarmConfig from '~/src/configs/alarm'\nimport commonConfig from '~/src/configs/common'\n\nconst MAX_CONTENT_CHAR = 1500 // 最大长度2000字, 这里留500字的冗余, 用于添加扩展信息\nconst wxAddr = _.get(alarmConfig, ['addr'], '')\nconst app = _.get(alarmConfig, ['app'], '')\nconst isUsingAlarm = _.get(commonConfig, ['ues', 'alarm'], true)\n\nfunction sendMessage (rawUcidList = [], message = '') {\n  if (isUsingAlarm) {\n    sendWXMessage(rawUcidList, message)\n  }\n}\n/**\n *\n * @param {Array}} ucidList\n * @param {String} message\n */\nfunction sendWXMessage (rawUcidList = [], message = '') {\n  if (_.isArray(rawUcidList) === false || _.isEmpty(rawUcidList) || _.isString(message) === false || message.length === 0) {\n    return true\n  }\n  let localIpList = NetworkUtil.getLocalIpList()\n  let localIpStr = localIpList.join(',')\n  // 适配ucid为15位的情况\n  let ucidList = []\n  for (let rawUcid of rawUcidList) {\n    let ucid = `${rawUcid}`\n    if (ucid.length > 10) {\n      // 对于完整式ucid, 去掉前边的标志位后, 转成数字即为真实ucid\n      ucid = parseInt(ucid.substr(1))\n    }\n    ucidList.push(ucid)\n    ucidList = _.uniq(ucidList)\n  }\n\n  let sendList = []\n  let massageId = md5(message).substring(0, 10)\n  // 如果message太长, 就分批发送\n  if (message.length > MAX_CONTENT_CHAR) {\n    let totalCount = parseInt(message.length / MAX_CONTENT_CHAR) + 1\n    let lastIndex = 1\n    for (; lastIndex <= totalCount; lastIndex = lastIndex + 1) {\n      let subContent = message.substring(MAX_CONTENT_CHAR * (lastIndex - 1), MAX_CONTENT_CHAR * lastIndex)\n\n      let massage = `\\\n消息:${massageId}(${lastIndex}/${totalCount})\n来自机器(${localIpStr}):\n${subContent}`\n      sendList.push(massage)\n    }\n  } else {\n    sendList = [\n      `\\\n消息:${massageId}\n来自机器(${localIpStr}):\n${message}`\n    ]\n  }\n  for (let content of sendList) {\n    http.post(wxAddr, JSON.stringify({\n      'app': app, // via 平台fe\n      'content': content, // 报警内容\n      'user': ucidList.join('|') // | 分隔\n    }))\n  }\n  return true\n}\n\nexport default {\n  sendMessage\n}\n"],"file":"alert.js"}