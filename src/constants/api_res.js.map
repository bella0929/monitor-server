{"version":3,"sources":["api_res.js"],"names":["ACTION_TYPE_SUCCESS","ACTION_TYPE_ALERT","ACTION_TYPE_REDIRECT","ACTION_TYPE_LOGIN","ACTION_TYPE_FORBIDDEN","showResult","data","msg","code","action","url","showError","errorMsg","errorCode","redirectTo","errorNo","needLoginIn","noPrivilege"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,mBAAmB,GAAG,SAA5B;AACA,MAAMC,iBAAiB,GAAG,OAA1B,C,CAAkC;;AAClC,MAAMC,oBAAoB,GAAG,UAA7B;AACA,MAAMC,iBAAiB,GAAG,OAA1B;AACA,MAAMC,qBAAqB,GAAG,UAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAqBC,IAArB,EAA2BC,GAAG,GAAG,EAAjC,EAAqCC,IAAI,GAAG,CAA5C,EAA+CC,MAAM,GAAGT,mBAAxD,EAA6EU,GAAG,GAAG,EAAnF,EAAuF;AACrF,SAAO;AACLF,IAAAA,IADK;AAELC,IAAAA,MAFK;AAGLH,IAAAA,IAHK;AAILC,IAAAA,GAJK;AAKLG,IAAAA;AALK,GAAP;AAOD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,SAAT,CAAoBC,QAAQ,GAAG,EAA/B,EAAmCC,SAAS,GAAG,KAA/C,EAAsDP,IAAI,GAAG,EAA7D,EAAiEG,MAAM,GAAGR,iBAA1E,EAA6F;AAC3F,MAAIS,GAAG,GAAG,EAAV;AACA,SAAOL,UAAU,CAACC,IAAD,EAAOM,QAAP,EAAiBC,SAAjB,EAA4BJ,MAA5B,EAAoCC,GAApC,CAAjB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,UAAT,CAAqBJ,GAAG,GAAG,EAA3B,EAA+BH,GAAG,GAAG,EAArC,EAAyCD,IAAI,GAAG,EAAhD,EAAoDS,OAAO,GAAG,KAA9D,EAAqE;AACnE,MAAIN,MAAM,GAAGP,oBAAb;AACA,SAAOG,UAAU,CAACC,IAAD,EAAOC,GAAP,EAAYQ,OAAZ,EAAqBN,MAArB,EAA6BC,GAA7B,CAAjB;AACD;;AAED,SAASM,WAAT,CAAsBT,GAAG,GAAG,MAA5B,EAAoC;AAClC,SAAOF,UAAU,CAAC,EAAD,EAAKE,GAAL,EAAU,KAAV,EAAiBJ,iBAAjB,EAAoC,QAApC,CAAjB;AACD;;AAED,SAASc,WAAT,CAAsBV,GAAG,GAAG,MAA5B,EAAoC;AAClC,SAAOF,UAAU,CAAC,EAAD,EAAKE,GAAL,EAAU,KAAV,EAAiBH,qBAAjB,EAAwC,EAAxC,CAAjB;AACD;;AAED,eAAe;AACb;AACAa,EAAAA,WAFa;AAGbD,EAAAA,WAHa;AAIbL,EAAAA,SAJa;AAKbN,EAAAA,UALa;AAMbS,EAAAA,UANa;AAQb;AACAd,EAAAA,mBATa;AAUbC,EAAAA,iBAVa;AAWbC,EAAAA,oBAXa;AAYbC,EAAAA,iBAZa;AAabC,EAAAA;AAba,CAAf","sourcesContent":["/**\n * 前端根据action类型判断接口响应逻辑\n *  1.  success\n *      1.  正常处理\n *  2.  alert\n *      1.  弹出提示框, 展示msg中的内容\n *  3.  redirect\n *      1.  如果msg中有内容, 将msg内容作为Alert弹出\n *      2.  跳转到url对应地址\n *  4.  login(前端可自行处理)\n *      1.  弹出提示: 请先登录\n *      2.  跳转到登录界面\n *  5.  forbitan(前端可自行处理)\n *      1.  弹出提示: 没有权限\n *      2.  跳转到首页(如果也没有首页权限, 则跳转到登录页)\n */\n\nconst ACTION_TYPE_SUCCESS = 'success'\nconst ACTION_TYPE_ALERT = 'alert' // 此处没有专门的Error类型, 因为如果不需要特殊操作的Error, 就不应该告知前端\nconst ACTION_TYPE_REDIRECT = 'redirect'\nconst ACTION_TYPE_LOGIN = 'login'\nconst ACTION_TYPE_FORBIDDEN = 'forbitan'\n\n/**\n * 返回响应值\n * @param {Object} data\n * @param {String} msg\n * @param {Number} code\n * @param {String} action\n * @param {String} url\n */\nfunction showResult (data, msg = '', code = 0, action = ACTION_TYPE_SUCCESS, url = '') {\n  return {\n    code,\n    action,\n    data,\n    msg,\n    url\n  }\n}\n\n/**\n * 返回错误消息\n * @param {*} errorMsg\n * @param {*} errorCode\n * @param {*} data\n * @param {*} action\n */\nfunction showError (errorMsg = '', errorCode = 10000, data = {}, action = ACTION_TYPE_ALERT) {\n  let url = ''\n  return showResult(data, errorMsg, errorCode, action, url)\n}\n\n/**\n * 跳转到指定url\n * @param {*} url\n * @param {*} msg\n * @param {*} data\n * @param {*} errorNo\n */\nfunction redirectTo (url = '', msg = '', data = {}, errorNo = 10000) {\n  let action = ACTION_TYPE_REDIRECT\n  return showResult(data, msg, errorNo, action, url)\n}\n\nfunction needLoginIn (msg = '请先登录') {\n  return showResult({}, msg, 10000, ACTION_TYPE_LOGIN, '/login')\n}\n\nfunction noPrivilege (msg = '没有权限') {\n  return showResult({}, msg, 10000, ACTION_TYPE_FORBIDDEN, '')\n}\n\nexport default {\n  // 标准接口\n  noPrivilege,\n  needLoginIn,\n  showError,\n  showResult,\n  redirectTo,\n\n  // Action类型\n  ACTION_TYPE_SUCCESS,\n  ACTION_TYPE_ALERT,\n  ACTION_TYPE_REDIRECT,\n  ACTION_TYPE_LOGIN,\n  ACTION_TYPE_FORBIDDEN\n}\n"],"file":"api_res.js"}