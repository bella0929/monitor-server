{"version":3,"sources":["update_per_ten_minute.js"],"names":["Base","_","MProject","MErrorSummary","moment","DATE_FORMAT","CreateCacheUpdatePerTenMinute","signature","description","execute","args","options","updateErrorNameDistributionCache","log","projectList","getList","project","projectId","get","startAt","subtract","UNIT","DAY","startOf","unix","endAt","endOf","result","getErrorNameDistributionByTimeWithCache"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,qBAAjB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,6BAAN,SAA4CN,IAA5C,CAAiD;AAC3B,aAATO,SAAS,GAAI;AACtB,WAAQ;AACZ;AACA,MAFI;AAGD;;AAEqB,aAAXC,WAAW,GAAI;AACxB,WAAO,0CAAP;AACD;;AAEY,QAAPC,OAAO,CAAEC,IAAF,EAAQC,OAAR,EAAiB;AAC5B,UAAM,KAAKC,gCAAL,EAAN;AACD;;AAEqC,QAAhCA,gCAAgC,GAAI;AACxC,SAAKC,GAAL,CAAS,YAAT;AACA,QAAIC,WAAW,GAAG,MAAMZ,QAAQ,CAACa,OAAT,EAAxB;;AACA,SAAK,IAAIC,OAAT,IAAoBF,WAApB,EAAiC;AAC/B,UAAIG,SAAS,GAAGhB,CAAC,CAACiB,GAAF,CAAMF,OAAN,EAAe,CAAC,IAAD,CAAf,EAAuB,CAAvB,CAAhB;;AACA,UAAIG,OAAO,GAAGf,MAAM,GAAGgB,QAAT,CAAkB,CAAlB,EAAqBf,WAAW,CAACgB,IAAZ,CAAiBC,GAAtC,EAA2CC,OAA3C,CAAmDlB,WAAW,CAACgB,IAAZ,CAAiBC,GAApE,EAAyEE,IAAzE,EAAd;AACA,UAAIC,KAAK,GAAGrB,MAAM,GAAGsB,KAAT,CAAerB,WAAW,CAACgB,IAAZ,CAAiBC,GAAhC,EAAqCE,IAArC,EAAZ;AACA,UAAIG,MAAM,GAAG,MAAMxB,aAAa,CAACyB,uCAAd,CAAsDX,SAAtD,EAAiEE,OAAjE,EAA0EM,KAA1E,EAAiF,IAAjF,CAAnB;AACA,WAAKZ,GAAL,CAAU,gBAAeI,SAAU,iBAAgBE,OAAQ,cAAaM,KAAM,aAA9E,EAA4FE,MAA5F;AACD;;AACD,SAAKd,GAAL,CAAS,YAAT;AACD;;AA1B8C;;AA6BjD,eAAeP,6BAAf","sourcesContent":["import Base from '~/src/commands/base'\nimport _ from 'lodash'\nimport MProject from '~/src/model/project/project'\nimport MErrorSummary from '~/src/model/summary/error_summary'\nimport moment from 'moment'\nimport DATE_FORMAT from '~/src/constants/date_format'\n\nclass CreateCacheUpdatePerTenMinute extends Base {\n  static get signature () {\n    return `\n      CreateCache:UpdatePerOneMinute\n     `\n  }\n\n  static get description () {\n    return '[每10分钟执行一次] 主动调用方法, 更新Redis缓存, 每10分钟更新一次'\n  }\n\n  async execute (args, options) {\n    await this.updateErrorNameDistributionCache()\n  }\n\n  async updateErrorNameDistributionCache () {\n    this.log('更新错误分布数据缓存')\n    let projectList = await MProject.getList()\n    for (let project of projectList) {\n      let projectId = _.get(project, ['id'], 0)\n      let startAt = moment().subtract(7, DATE_FORMAT.UNIT.DAY).startOf(DATE_FORMAT.UNIT.DAY).unix()\n      let endAt = moment().endOf(DATE_FORMAT.UNIT.DAY).unix()\n      let result = await MErrorSummary.getErrorNameDistributionByTimeWithCache(projectId, startAt, endAt, true)\n      this.log(`projectId => ${projectId} , startAt => ${startAt}, endAt => ${endAt}, result =>`, result)\n    }\n    this.log('错误分布缓存更新完毕')\n  }\n}\n\nexport default CreateCacheUpdatePerTenMinute\n"],"file":"update_per_ten_minute.js"}