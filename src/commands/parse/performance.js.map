{"version":3,"sources":["performance.js"],"names":["_","DATE_FORMAT","moment","MPerformance","ParseBase","ParseUV","signature","COMMAND_ARGUMENT_BY_MINUTE","description","isLegalRecord","record","projectId","get","parseInt","isNumber","replaceIndicatorRecord","indicator","indicatorValue","url","countAtMinute","country","province","city","uniqIdPath","log","locationPath","uniqIdMap","Map","sum_indicator_value","pv","set","projectMap","has","key","value","entries","JSON","stringify","computeIndicatorValue","indicatorCollection","isLegal","endAt","startAt","INDICATOR_TYPE_DNS查询耗时","INDICATOR_TYPE_TCP链接耗时","INDICATOR_TYPE_请求响应耗时","INDICATOR_TYPE_内容传输耗时","INDICATOR_TYPE_DOM解析耗时","INDICATOR_TYPE_资源加载耗时","INDICATOR_TYPE_SSL连接耗时","INDICATOR_TYPE_首次渲染耗时","INDICATOR_TYPE_首包时间耗时","INDICATOR_TYPE_首次可交互耗时","INDICATOR_TYPE_DOM_READY_耗时","INDICATOR_TYPE_页面完全加载耗时","processRecordAndCacheInProjectMap","visitAt","detail","isEmpty","isString","length","visitAtMinute","unix","format","DATABASE_BY_MINUTE","save2DB","totalRecordCount","getRecordCountInProjectMap","processRecordCount","successSaveCount","cityDistribute","sumIndicatorValueTotal","pvTotal","sumIndicatorValue","countAt","DATABASE_BY_UNIT","UNIT","MINUTE","isSuccess","replaceInto","reportProcess","totalCount"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport DATE_FORMAT from '~/src/constants/date_format'\nimport moment from 'moment'\nimport MPerformance from '~/src/model/parse/performance'\nimport ParseBase from '~/src/commands/parse/base'\n\nclass ParseUV extends ParseBase {\n  static get signature() {\n    return `\n     Parse:Performance \n     {startAtYmdHi:日志扫描范围上限${DATE_FORMAT.COMMAND_ARGUMENT_BY_MINUTE}格式}\n     {endAtYmdHi:日志扫描范围下限${DATE_FORMAT.COMMAND_ARGUMENT_BY_MINUTE}格式}\n     `\n  }\n\n  static get description() {\n    return '[按小时] 解析nginx日志, 分析分钟级别的指定时间范围内的性能指标'\n  }\n\n  /**\n   * 判断该条记录是不是perf记录\n   * @param {Object} record\n   * @return {Boolean}\n   */\n  isLegalRecord(record) {\n    let projectId = _.get(record, ['project_id'], 0)\n    if (_.get(record, ['type'], '') !== 'perf') {\n      return false\n    }\n    projectId = parseInt(projectId)\n    if (_.isNumber(projectId) === false) {\n      return false\n    }\n    if (projectId <= 0) {\n      return false\n    }\n    return true\n  }\n\n  /**\n   * 更新并替换projectMap中的总记录数\n   * @param {*} indicator\n   * @param {*} indicatorValue\n   * @param {*} projectId\n   * @param {*} url\n   * @param {*} countAtMinute\n   * @param {*} country\n   * @param {*} province\n   * @param {*} city\n   */\n  replaceIndicatorRecord(indicator, indicatorValue, projectId, url, countAtMinute, country, province, city) {\n    // 初始化Map路径\n    let uniqIdPath = [projectId, url, indicator, countAtMinute] // 记录唯一key\n    this.log('performance uniqIdPath ',uniqIdPath);\n    let locationPath = [country, province, city] // 路径地址\n    this.log('performance locationPath ',locationPath);\n    // 初始化Map对象\n    let uniqIdMap = new Map()\n    let record = { sum_indicator_value: 0, pv: 0 };\n    uniqIdMap.set(locationPath, record);\n\n    // 检查projectMap中是否有对应记录, 如果有, 使用projectMap中的记录\n    if (this.projectMap.has(uniqIdPath)) {\n      uniqIdMap = this.projectMap.get(uniqIdPath)\n      if (uniqIdMap.has(locationPath)) {\n        record = uniqIdMap.get(locationPath)\n      } else {\n        uniqIdMap.set(locationPath, record)\n      }\n    } else {\n      this.projectMap.set(uniqIdPath, uniqIdMap)\n    }\n\n    record['sum_indicator_value'] += indicatorValue\n    record['pv'] += 1\n    this.log('performance record ',record);\n    // 将记录更新回Map中\n    uniqIdMap.set(locationPath, record)\n    for(let [key,value] of uniqIdMap.entries()){\n      this.log(\"uniqIdMap key：\" + JSON.stringify(key) + \",value：\" +JSON.stringify(value));\n    }\n    this.projectMap.set(uniqIdPath, uniqIdMap);\n    for(let [key,value] of this.projectMap.entries()){\n      this.log(\"projectMap key：\" + JSON.stringify(key) + \",value：\" +value);\n    }\n    return true\n  }\n\n  /**\n   * 根据指标类型, 自动计算指标数据, 数据异常返回-1\n   * @param {*} indicator\n   * @param {*} indicatorCollection\n   */\n  computeIndicatorValue(indicator, indicatorCollection) {\n    // DNS查询: domainLookupEnd - domainLookupStart\n    // TCP连接: connectEnd - connectStart\n    // 请求响应: responseStart - requestStart\n    // 内容传输: responseEnd - responseStart\n    // DOM解析: domInteractive - responseEnd\n    // 资源加载: loadEventStart - domContentLoadedEventEnd\n    function isLegal(value) {\n      return _.isNumber(value) && value > 0 && value < 1000000 // 不能小于等于0, 不能大于1000秒 \n    }\n\n    let endAt = 0\n    let startAt = 0\n    let value = 0\n    switch (indicator) {\n      // 区间段耗时\n      case MPerformance.INDICATOR_TYPE_DNS查询耗时:\n        endAt = _.get(indicatorCollection, ['domainLookupEnd'], 0)\n        startAt = _.get(indicatorCollection, ['domainLookupStart'], 0)\n        break\n      case MPerformance.INDICATOR_TYPE_TCP链接耗时:\n        endAt = _.get(indicatorCollection, ['connectEnd'], 0)\n        startAt = _.get(indicatorCollection, ['connectStart'], 0)\n        break\n      case MPerformance.INDICATOR_TYPE_请求响应耗时:\n        endAt = _.get(indicatorCollection, ['responseStart'], 0)\n        startAt = _.get(indicatorCollection, ['requestStart'], 0)\n        break\n      case MPerformance.INDICATOR_TYPE_内容传输耗时:\n        endAt = _.get(indicatorCollection, ['responseEnd'], 0)\n        startAt = _.get(indicatorCollection, ['responseStart'], 0)\n        break\n      case MPerformance.INDICATOR_TYPE_DOM解析耗时:\n        endAt = _.get(indicatorCollection, ['domInteractive'], 0)\n        startAt = _.get(indicatorCollection, ['responseEnd'], 0)\n        break\n      case MPerformance.INDICATOR_TYPE_资源加载耗时:\n        endAt = _.get(indicatorCollection, ['loadEventStart'], 0)\n        startAt = _.get(indicatorCollection, ['domContentLoadedEventEnd'], 0)\n        break\n      case MPerformance.INDICATOR_TYPE_SSL连接耗时:\n        // secureConnectionStart 值可能为0\n        // 刷新https页面时, secureConnectionStart值即为0 \n        // Chrome已报bug, 不过官方不准备修复. https://bugs.chromium.org/p/chromium/issues/detail?id=404501\n        endAt = _.get(indicatorCollection, ['connectEnd'], 0)\n        startAt = _.get(indicatorCollection, ['secureConnectionStart'], 0)\n        break\n      // 关键性能指标\n      case MPerformance.INDICATOR_TYPE_首次渲染耗时:\n        endAt = _.get(indicatorCollection, ['responseEnd'], 0)\n        startAt = _.get(indicatorCollection, ['fetchStart'], 0)\n        break\n      case MPerformance.INDICATOR_TYPE_首包时间耗时:\n        endAt = _.get(indicatorCollection, ['responseStart'], 0)\n        startAt = _.get(indicatorCollection, ['domainLookupStart'], 0)\n        break\n      case MPerformance.INDICATOR_TYPE_首次可交互耗时:\n        endAt = _.get(indicatorCollection, ['domInteractive'], 0)\n        startAt = _.get(indicatorCollection, ['fetchStart'], 0)\n        break\n      case MPerformance.INDICATOR_TYPE_DOM_READY_耗时:\n        endAt = _.get(indicatorCollection, ['domContentLoadedEventEnd'], 0)\n        startAt = _.get(indicatorCollection, ['fetchStart'], 0)\n        break\n      case MPerformance.INDICATOR_TYPE_页面完全加载耗时:\n        endAt = _.get(indicatorCollection, ['loadEventStart'], 0)\n        startAt = _.get(indicatorCollection, ['fetchStart'], 0)\n        break\n\n      default:\n        // 没有匹配到指标处理逻辑, 自动返回\n        this.log(`没有匹配到${indicator}指标, 自动跳过`)\n        return -1\n    }\n\n    // 首先判断参数是否合理\n    if (endAt <= 0 || startAt <= 0) {\n      this.log(`${indicator}指标计算异常, startAt => ${startAt}, endAt => ${endAt}, 自动跳过`)\n      return -1\n    }\n\n    value = endAt - startAt\n    if (isLegal(value) === false) {\n      this.log(`${indicator}指标计算异常, startAt => ${startAt}, endAt => ${endAt}, 自动跳过`)\n      return -1\n    }\n    return value\n  }\n\n  /**\n   * 更新记录\n   */\n  async processRecordAndCacheInProjectMap(record) {\n    let visitAt = _.get(record, ['time'], 0)\n    let projectId = _.get(record, ['project_id'], 0)\n    let country = _.get(record, ['country'], '')\n    let province = _.get(record, ['province'], '')\n    let city = _.get(record, ['city'], '')\n    // 数据都在detail里\n    let detail = _.get(record, ['detail'], {})\n    let url = _.get(detail, ['url'], '')\n    if (_.isNumber(visitAt) === false || visitAt === 0 || _.isEmpty(detail) || _.isString(url) === false || url.length === 0) {\n      this.log(`数据不合法, 自动跳过 visitAt => ${visitAt}`, 'detail =>', detail, 'url =>', url)\n      return false\n    }\n    let visitAtMinute = moment.unix(visitAt).format(DATE_FORMAT.DATABASE_BY_MINUTE)\n\n    // 计算响应指标数据\n    for (let indicator of [\n      //  资源加载指标\n      MPerformance.INDICATOR_TYPE_DNS查询耗时,\n      MPerformance.INDICATOR_TYPE_TCP链接耗时,\n      MPerformance.INDICATOR_TYPE_请求响应耗时,\n      MPerformance.INDICATOR_TYPE_DOM解析耗时,\n      MPerformance.INDICATOR_TYPE_内容传输耗时,\n      MPerformance.INDICATOR_TYPE_资源加载耗时,\n      MPerformance.INDICATOR_TYPE_SSL连接耗时,\n\n      // 关键性能指标\n      MPerformance.INDICATOR_TYPE_首包时间耗时,\n      MPerformance.INDICATOR_TYPE_首次渲染耗时,\n      MPerformance.INDICATOR_TYPE_首次可交互耗时,\n      MPerformance.INDICATOR_TYPE_DOM_READY_耗时,\n      MPerformance.INDICATOR_TYPE_页面完全加载耗时,\n    ]) {\n      let indicatorValue = this.computeIndicatorValue(indicator, detail)\n      if (indicatorValue >= 0) {\n        this.replaceIndicatorRecord(indicator, indicatorValue, projectId, url, visitAtMinute, country, province, city)\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * 将数据同步到数据库中\n   */\n  async save2DB() {\n    let totalRecordCount = this.getRecordCountInProjectMap()\n    let processRecordCount = 0\n    let successSaveCount = 0\n\n    for (let [[projectId, url, indicator, countAtMinute], uniqIdMap] of this.projectMap) {\n      let cityDistribute = {}\n      let sumIndicatorValueTotal = 0\n      let pvTotal = 0\n      for (let [[country, province, city], record] of uniqIdMap) {\n        let {\n          sum_indicator_value: sumIndicatorValue,\n          pv\n        } = record\n\n        _.set(cityDistribute, [country, province, city], {\n          pv,\n          sum_indicator_value: sumIndicatorValue\n        })\n\n        pvTotal = pvTotal + pv\n        sumIndicatorValueTotal = sumIndicatorValueTotal + sumIndicatorValue\n      }\n      let countAt = moment(countAtMinute, DATE_FORMAT.DATABASE_BY_UNIT[DATE_FORMAT.UNIT.MINUTE]).unix()\n      let isSuccess = await MPerformance.replaceInto(projectId, url, indicator, countAt, DATE_FORMAT.UNIT.MINUTE, sumIndicatorValueTotal, pvTotal, cityDistribute)\n      processRecordCount = processRecordCount + 1\n      if (isSuccess) {\n        successSaveCount = successSaveCount + 1\n      }\n      this.reportProcess(processRecordCount, successSaveCount, totalRecordCount)\n    }\n    return { totalRecordCount, processRecordCount, successSaveCount }\n  }\n\n  /**\n   * 统计 projectUvMap 中的记录总数\n   */\n  getRecordCountInProjectMap() {\n    let totalCount = 0\n    for (let [[projectId, url, indicator, countAtMinute], uniqIdMap] of this.projectMap) {\n      for (let [[country, province, city], record] of uniqIdMap) {\n        totalCount = totalCount + 1\n      }\n    }\n    return totalCount\n  }\n}\n\nexport default ParseUV\n"],"file":"performance.js"}