{"version":3,"sources":["menu_click.js"],"names":["ParseBase","moment","_","MBehaviorDistribution","MCityDistribution","DATE_FORMAT","LegalRecordType","LegalRecordCode","COUNT_TYPE_HOUR","UNIT","HOUR","COUNT_BY_HOUR_DATE_FORMAT","DATABASE_BY_HOUR","MenuClick","signature","COMMAND_ARGUMENT_BY_MINUTE","description","isLegalRecord","record","console","log","recordType","get","code","projectId","menuName","menuCode","menuUrl","parseInt","isNumber","processRecordAndCacheInProjectMap","name","url","length","slice","country","province","city","recordAt","countAtTime","unix","format","distributionPath","distributeCountCount","countAtMap","Map","codeMap","distribution","projectMap","has","recordPackage","oldDistributeCount","set","save2DB","totalRecordCount","getRecordCountInProjectMap","processRecordCount","successSaveCount","recordList","getFlattenCityRecordListInDistribution","totalCount","isSuccess","replaceRecord","reportProcess"],"mappings":"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","sourcesContent":["\nimport ParseBase from '~/src/commands/parse/base'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport MBehaviorDistribution from '~/src/model/parse/behavior_distribution'\nimport MCityDistribution from '~/src/model/parse/city_distribution'\nimport DATE_FORMAT from '~/src/constants/date_format'\n\nconst LegalRecordType = 'product'\nconst LegalRecordCode = 10002\n\nconst COUNT_TYPE_HOUR = DATE_FORMAT.UNIT.HOUR\nconst COUNT_BY_HOUR_DATE_FORMAT = DATE_FORMAT.DATABASE_BY_HOUR\n\n/**\n * 解析用户点击情况\n */\nclass MenuClick extends ParseBase {\n  static get signature () {\n    return `\n     Parse:MenuClick \n     {startAtYmdHi:日志扫描范围上限${DATE_FORMAT.COMMAND_ARGUMENT_BY_MINUTE}格式}\n     {endAtYmdHi:日志扫描范围下限${DATE_FORMAT.COMMAND_ARGUMENT_BY_MINUTE}格式}\n     `\n  }\n\n  static get description () {\n    return '[按天] 解析nginx日志, 用户点击情况'\n  }\n\n  /**\n     * 判断该条记录是不是需要解析的记录\n     * @param {Object} record\n     * @return {Boolean}\n     */\n  isLegalRecord (record) {\n    console.log('menu_click.js isLegalRecord record',record);\n    let recordType = _.get(record, ['type'], '')\n    let code = _.get(record, ['code'], '')\n    let projectId = _.get(record, ['project_id'], '')\n    let menuName = _.get(record, ['detail', 'name'], '')\n    let menuCode = _.get(record, ['detail', 'code'], '')\n    let menuUrl = _.get(record, ['detail', 'url'], '')\n    code = parseInt(code)\n    menuCode = menuCode + '' // 转成字符串\n    projectId = parseInt(projectId)\n    if (recordType !== LegalRecordType) {\n      return false\n    }\n    if (_.isNumber(code) === false) {\n      return false\n    }\n    if (code !== LegalRecordCode) {\n      return false\n    }\n    if (_.isNumber(projectId) === false) {\n      return false\n    }\n    if (projectId < 0) {\n      return false\n    }\n    if (menuCode === '') {\n      return false\n    }\n    return true\n  }\n\n  /**\n   * 更新记录\n   */\n  async processRecordAndCacheInProjectMap (record) {\n    let projectId = _.get(record, ['project_id'], '')\n    let name = _.get(record, ['detail', 'name'], '')\n    let code = _.get(record, ['detail', 'code'], '')\n    let url = _.get(record, ['detail', 'url'], '')\n    url = url + '' // 强制转换为字符串\n    if (url.length > 200) {\n      // url最长是200个字符\n      url = url.slice(0, 200)\n    }\n    this.log('=== url ===',url);\n    let country = _.get(record, ['country'], '')\n    let province = _.get(record, ['province'], '')\n    let city = _.get(record, ['city'], '')\n    let recordAt = _.get(record, ['time'], 0)\n\n    let countAtTime = moment.unix(recordAt).format(COUNT_BY_HOUR_DATE_FORMAT)\n    let distributionPath = [country, province, city]\n\n    let distributeCountCount = 1\n    let countAtMap = new Map()\n    let codeMap = new Map()\n    let distribution = {}\n    if (this.projectMap.has(projectId)) {\n      countAtMap = this.projectMap.get(projectId)\n      if (countAtMap.has(countAtTime)) {\n        codeMap = countAtMap.get(countAtTime)\n        if (codeMap.has(code)) {\n          let recordPackage = codeMap.get(code)\n          distribution = _.get(recordPackage, ['distribution'], {})\n          if (_.has(distribution, distributionPath)) {\n            let oldDistributeCount = _.get(distribution, distributionPath, 0)\n            distributeCountCount = distributeCountCount + oldDistributeCount\n          }\n        }\n      }\n    }\n    _.set(distribution, distributionPath, distributeCountCount)\n    let recordPackage = {\n      code,\n      distribution,\n      name,\n      url\n    }\n    codeMap.set(code, recordPackage)\n    countAtMap.set(countAtTime, codeMap)\n    this.projectMap.set(projectId, countAtMap)\n    return true\n  }\n\n  /**\n   * 将数据同步到数据库中\n   */\n  async save2DB () {\n    let totalRecordCount = this.getRecordCountInProjectMap()\n    let processRecordCount = 0\n    let successSaveCount = 0\n    for (let [projectId, countAtMap] of this.projectMap) {\n      for (let [countAtTime, codeMap] of countAtMap) {\n        for (let [code, recordPackage] of codeMap) {\n          let { distribution, name, url } = recordPackage\n          let recordList = MCityDistribution.getFlattenCityRecordListInDistribution(distribution)\n          let totalCount = 0\n          for (let record of recordList) {\n            totalCount = totalCount + record\n          }\n\n          let isSuccess = await MBehaviorDistribution.replaceRecord(projectId, code, name, url, totalCount, countAtTime, COUNT_TYPE_HOUR, distribution)\n          processRecordCount = processRecordCount + 1\n          if (isSuccess) {\n            successSaveCount = successSaveCount + 1\n          }\n          this.reportProcess(processRecordCount, successSaveCount, totalRecordCount)\n        }\n      }\n    }\n    return { totalRecordCount, processRecordCount, successSaveCount }\n  }\n\n  /**\n   * 统计 projectUvMap 中的记录总数\n   */\n  getRecordCountInProjectMap () {\n    let totalCount = 0\n    for (let [projectId, countAtMap] of this.projectMap) {\n      for (let [countAtTime, codeMap] of countAtMap) {\n        for (let [code, recordPackage] of codeMap) {\n          totalCount = totalCount + 1\n        }\n      }\n    }\n    return totalCount\n  }\n}\n\nexport default MenuClick\n"],"file":"menu_click.js"}