{"version":3,"sources":["uv.js"],"names":["ParseBase","moment","_","MUvRecord","DATE_FORMAT","ParseUV","signature","COMMAND_ARGUMENT_BY_MINUTE","description","isLegalRecord","record","processRecordAndCacheInProjectMap","commonInfo","get","uuid","visitAt","projectId","country","province","city","pvCount","isNumber","isEmpty","log","visitAtHour","unix","format","DATABASE_BY_MINUTE","uvRecord","visitAtMap","Map","uvMap","projectMap","has","oldUvRecord","set","size","save2DB","totalRecordCount","getRecordCountInProjectMap","processRecordCount","successSaveCount","visitAtInDb","existUuidSet","getExistUuidSetInHour","key","isSuccess","replaceUvRecord","add","reportProcess","totalCount","uv"],"mappings":"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","sourcesContent":["import ParseBase from '~/src/commands/parse/base'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport MUvRecord from '~/src/model/parse/uv_record'\nimport DATE_FORMAT from '~/src/constants/date_format'\n\nclass ParseUV extends ParseBase {\n  static get signature () {\n    return `\n     Parse:UV \n     {startAtYmdHi:日志扫描范围上限${DATE_FORMAT.COMMAND_ARGUMENT_BY_MINUTE}格式}\n     {endAtYmdHi:日志扫描范围下限${DATE_FORMAT.COMMAND_ARGUMENT_BY_MINUTE}格式}\n     `\n  }\n\n  static get description () {\n    return '[按小时] 解析nginx日志, 分析记录指定时间范围内的uv'\n  }\n\n  /**\n   * 判断该条记录是不是uv记录\n   * @param {Object} record\n   * @return {Boolean}\n   */\n  isLegalRecord (record) {\n    return true\n  }\n\n  /**\n   * 更新记录\n   */\n  async processRecordAndCacheInProjectMap (record) {\n    let commonInfo = _.get(record, ['common'], {})\n    let uuid = _.get(commonInfo, ['uuid'], '')\n    let visitAt = _.get(record, ['time'], 0)\n    let projectId = _.get(record, ['project_id'], 0)\n    let country = _.get(record, ['country'], '')\n    let province = _.get(record, ['province'], '')\n    let city = _.get(record, ['city'], '')\n    //this.log('uv record',record);\n    \n    let pvCount = 1\n    if (_.isNumber(visitAt) === false || visitAt === 0 || _.isEmpty(uuid)) {\n      this.log(`数据不合法, 自动跳过 visitAt => ${visitAt}, uuid => ${uuid}`)\n      return false\n    }\n    let visitAtHour = moment.unix(visitAt).format(DATE_FORMAT.DATABASE_BY_MINUTE)\n    let uvRecord = {\n      projectId,\n      visitAt,\n      uuid,\n      country,\n      province,\n      city,\n      pvCount\n    }\n    this.log('uvRecord',uvRecord);\n    let visitAtMap = new Map()\n    let uvMap = new Map()\n    if (this.projectMap.has(projectId)) {\n      visitAtMap = this.projectMap.get(projectId)\n      if (visitAtMap.has(visitAtHour)) {\n        uvMap = visitAtMap.get(visitAtHour)\n        if (uvMap.has(uuid)) {\n          let oldUvRecord = uvMap.get(uuid)\n          uvRecord.pvCount = oldUvRecord.pvCount + uvRecord.pvCount\n        }\n      }\n    }\n    this.log('uuid, uvRecord ',uuid, uvRecord);\n    uvMap.set(uuid, uvRecord)\n    //this.log('uvRecord',uvRecord);\n    this.log('visitAtHour, uvMap',visitAtHour, uvMap);\n    visitAtMap.set(visitAtHour, uvMap)\n    this.log('uvMap.size ',uvMap.size);\n    this.log('before this.projectMap',this.projectMap,projectId,visitAtMap);\n    this.projectMap.set(projectId, visitAtMap);\n    this.log('after this.projectMap',this.projectMap);\n    return true\n  }\n\n  /**\n   * 将数据同步到数据库中\n   */\n  async save2DB () {\n    let totalRecordCount = this.getRecordCountInProjectMap()\n    let processRecordCount = 0\n    let successSaveCount = 0\n    this.log('this.projectMap.size',this.projectMap.size);\n    \n    for (let [projectId, visitAtMap] of this.projectMap) {\n      for (let [visitAtHour, uvMap] of visitAtMap) {\n        let visitAtInDb = moment(visitAtHour, DATE_FORMAT.DATABASE_BY_MINUTE).unix();\n        this.log('visitAtInDb ',visitAtInDb );\n        let existUuidSet = await MUvRecord.getExistUuidSetInHour(projectId, visitAtInDb);\n        this.log('existUuidSet.size ',existUuidSet.size );\n        for (let [key, uvRecord] of uvMap) {\n          this.log('uuid, uvRecord  ',key, uvRecord );\n          let {\n            projectId,\n            visitAt,\n            uuid,\n            country,\n            province,\n            city\n          } = uvRecord\n          let isSuccess = false\n          uuid = `${uuid}` // 转成string\n          this.log('existUuidSet.has(uuid) ',existUuidSet.has(uuid));\n          if (existUuidSet.has(uuid) === false) {\n            // 只有当uuid不存在时才插入\n            isSuccess = await MUvRecord.replaceUvRecord(projectId, uuid, visitAt, country, province, city)\n            // 插入完成后, 把uuid再补进去(意义不大, 只为了增强稳定性)\n            existUuidSet.add(uuid)\n          }\n          processRecordCount = processRecordCount + 1\n          if (isSuccess) {\n            successSaveCount = successSaveCount + 1\n          }\n          this.reportProcess(processRecordCount, successSaveCount, totalRecordCount)\n        }\n      }\n    }\n    return { totalRecordCount, processRecordCount, successSaveCount }\n  }\n\n  /**\n   * 统计 projectUvMap 中的记录总数\n   */\n  getRecordCountInProjectMap () {\n    let totalCount = 0\n    for (let [projectId, visitAtMap] of this.projectMap) {\n      for (let [visitAtHour, uvMap] of visitAtMap) {\n        for (let [uv, uvRecord] of uvMap) {\n          totalCount = totalCount + 1\n        }\n      }\n    }\n    return totalCount\n  }\n}\n\nexport default ParseUV\n"],"file":"uv.js"}