{"version":3,"sources":["device.js"],"names":["ParseBase","moment","_","MCommon","DATE_FORMAT","DataCleaning","datacleaning","BaseTableName","ParseDevice","signature","COMMAND_ARGUMENT_BY_MINUTE","description","isLegalRecord","record","ua","get","uuid","browserVersion","isEmpty","processRecordAndCacheInProjectMap","commonInfo","visitAt","projectId","country","province","city","browser","engine","engineVersion","console","log","deviceVendor","deviceModel","os","osVersion","runtimeVersion","visitAtMonth","unix","format","DATABASE_BY_MONTH","deviceRecord","getData","visitAtMap","Map","deviceMap","projectMap","has","set","save2DB","totalRecordCount","getRecordCountInProjectMap","processRecordCount","successSaveCount","processTableName","getTableName","SPLIT_BY","PROJECT","sqlParams","browser_version","engine_version","device_vendor","device_model","os_version","runtime_version","visit_at_month","log_at","isSuccess","replaceInto","tableName","splitBy","where","datas","reportProcess","totalCount"],"mappings":"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","sourcesContent":["import ParseBase from '~/src/commands/parse/base'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport MCommon from '~/src/model/parse/common'\nimport DATE_FORMAT from '~/src/constants/date_format'\nimport DataCleaning from '~/src/commands/utils/data_cleaning'\n\nlet datacleaning = new DataCleaning()\nconst BaseTableName = 't_o_system_collection'\n\nclass ParseDevice extends ParseBase {\n  static get signature () {\n    return `\n      Parse:Device\n      {startAtYmdHi:日志扫描范围上限${DATE_FORMAT.COMMAND_ARGUMENT_BY_MINUTE}格式}\n      {endAtYmdHi:日志扫描范围下限${DATE_FORMAT.COMMAND_ARGUMENT_BY_MINUTE}格式}\n    `\n  }\n\n  static get description () {\n    return '[按天] 解析nginx日志, 分析指定时间范围Device'\n  }\n\n  /**\n   * 判断该条记录是不是device记录\n   * @param {Object} record\n   * @return {Boolean}\n   */\n  isLegalRecord (record) {\n    let ua = _.get(record, ['ua'], {})\n    let uuid = _.get(record, ['common', 'uuid'], '')\n    let browserVersion = _.get(ua, ['browser', 'version'], '')\n    if (_.isEmpty(uuid)) {\n      return false\n    }\n    if (_.isEmpty(ua)) {\n      return false\n    }\n    // 旧的打点UA传的有问题, chrome版本号固定写成了537.36\n    if (browserVersion && browserVersion > 537) {\n      return false\n    }\n    return true\n  }\n\n  /**\n   * 更新记录\n   */\n  async processRecordAndCacheInProjectMap (record) {\n    let commonInfo = _.get(record, ['common'], {})\n    let ua = _.get(record, ['ua'], {})\n    let uuid = _.get(commonInfo, ['uuid'], '')\n    let visitAt = _.get(record, ['time'], 0)\n    let projectId = _.get(record, ['project_id'], 0)\n    let country = _.get(record, ['country'], '')\n    let province = _.get(record, ['province'], '')\n    let city = _.get(record, ['city'], '')\n    let browser = _.get(ua, ['browser', 'name'], '')\n    let browserVersion = _.get(ua, ['browser', 'version'], '')\n    let engine = _.get(ua, ['engine', 'name'], '')\n    let engineVersion = _.get(ua, ['engine', 'version'], '')\n    console.log('ua.device',_.get(ua, ['device'], ''));\n    let deviceVendor = _.get(ua, ['device', 'vendor'], '')\n    let deviceModel = _.get(ua, ['device', 'model'], '')\n    let os = _.get(ua, ['os', 'name'], '')\n    let osVersion = _.get(ua, ['os', 'version'], '')\n    let runtimeVersion = _.get(commonInfo, ['runtime_version'], '')\n    let visitAtMonth = moment.unix(visitAt).format(DATE_FORMAT.DATABASE_BY_MONTH)\n    let deviceRecord = {\n      projectId,\n      visitAt,\n      uuid,\n      browser,\n      browserVersion,\n      engine,\n      engineVersion,\n      deviceVendor,\n      deviceModel,\n      os,\n      osVersion,\n      country,\n      province,\n      city,\n      runtimeVersion\n    }\n\n    // 数据清洗迭代器\n    // '~/src/commands/utils/data_cleaning'\n    if (!datacleaning.getData(deviceRecord, 'deviceConfigDevice')) {\n      return false\n    }\n\n    let visitAtMap = new Map()\n    let deviceMap = new Map()\n    if (this.projectMap.has(projectId)) {\n      visitAtMap = this.projectMap.get(projectId)\n      if (visitAtMap.has(visitAtMonth)) {\n        deviceMap = visitAtMap.get(visitAtMonth)\n      }\n    }\n    //一个uuid只能算一条\n    this.log('uuid,deviceRecord ',uuid,deviceRecord);\n    deviceMap.set(uuid, deviceRecord)\n    visitAtMap.set(visitAtMonth, deviceMap)\n    this.projectMap.set(projectId, visitAtMap)\n    return true\n  }\n\n  /**\n   * 将数据同步到数据库中\n   */\n  async save2DB () {\n    let totalRecordCount = this.getRecordCountInProjectMap()\n    let processRecordCount = 0\n    let successSaveCount = 0\n    for (let [projectId, visitAtMap] of this.projectMap) {\n      const processTableName = MCommon.getTableName(BaseTableName, MCommon.SPLIT_BY.PROJECT, projectId)\n      for (let [visitAtMonth, deviceMap] of visitAtMap) {\n        for (let [uuid, deviceRecord] of deviceMap) {\n          let {\n            visitAt\n          } = deviceRecord\n          const sqlParams = {\n            uuid: uuid,\n            browser: deviceRecord.browser,\n            browser_version: deviceRecord.browserVersion,\n            engine: deviceRecord.engine,\n            engine_version: deviceRecord.engineVersion,\n            device_vendor: deviceRecord.deviceVendor,\n            device_model: deviceRecord.deviceModel,\n            os: deviceRecord.os,\n            os_version: deviceRecord.osVersion,\n            country: deviceRecord.country,\n            province: deviceRecord.province,\n            city: deviceRecord.city,\n            runtime_version: deviceRecord.runtimeVersion,\n            visit_at_month: visitAtMonth,\n            log_at: visitAt\n          }\n          let isSuccess = await MCommon.replaceInto({\n            tableName: BaseTableName,\n            splitBy: MCommon.SPLIT_BY.PROJECT,\n            projectId: projectId,\n            where: { 'visit_at_month': visitAtMonth, 'uuid': uuid },\n            datas: sqlParams\n          })\n          processRecordCount = processRecordCount + 1\n          if (isSuccess) {\n            successSaveCount = successSaveCount + 1\n          }\n          this.reportProcess(processRecordCount, successSaveCount, totalRecordCount, processTableName)\n        }\n      }\n    }\n    return { totalRecordCount, processRecordCount, successSaveCount }\n  }\n\n  /**\n   * 统计 projectdeviceMap 中的记录总数\n   */\n  getRecordCountInProjectMap () {\n    let totalCount = 0\n    for (let [projectId, visitAtMap] of this.projectMap) {\n      for (let [visitAtMonth, deviceMap] of visitAtMap) {\n        for (let [uuid, deviceRecord] of deviceMap) {\n          totalCount = totalCount + 1\n        }\n      }\n    }\n    return totalCount\n  }\n}\n\nexport default ParseDevice\n"],"file":"device.js"}