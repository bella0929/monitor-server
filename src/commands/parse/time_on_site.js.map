{"version":3,"sources":["time_on_site.js"],"names":["ParseBase","moment","_","MDurationDistribution","MCityDistribution","MUniqueView","DATE_FORMAT","LegalRecordType","LegalRecordCode","MaxAllowRecordDuringMs","MinAllowRecordDuringMs","COUNT_TYPE_HOUR","COUNT_BY_HOUR_DATE_FORMAT","DATABASE_BY_HOUR","TimeOnSiteByHour","signature","COMMAND_ARGUMENT_BY_MINUTE","description","isLegalRecord","record","recordType","get","code","projectId","durationMs","parseInt","isNumber","processRecordAndCacheInProjectMap","country","province","city","recordAt","countAtTime","unix","format","distributionPath","countAtMap","Map","distribution","projectMap","has","oldDurationMs","set","save2DB","totalRecordCount","getRecordCountInProjectMap","processRecordCount","successSaveCount","recordList","getFlattenCityRecordListInDistribution","log","totalStayMs","totalUv","getTotalUv","isSuccess","replaceUvRecord","reportProcess","totalCount"],"mappings":"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","sourcesContent":["import ParseBase from '~/src/commands/parse/base'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport MDurationDistribution from '~/src/model/parse/duration_distribution'\nimport MCityDistribution from '~/src/model/parse/city_distribution'\nimport MUniqueView from '~/src/model/summary/unique_view'\nimport DATE_FORMAT from '~/src/constants/date_format'\n\nconst LegalRecordType = 'product'\nconst LegalRecordCode = 10001\nconst MaxAllowRecordDuringMs = 7200000 // 用户停留时长不能超过两小时(避免作弊)\nconst MinAllowRecordDuringMs = 0 // 用户停留时长不能小于0\n\nconst COUNT_TYPE_HOUR = 'hour'\nconst COUNT_BY_HOUR_DATE_FORMAT = DATE_FORMAT.DATABASE_BY_HOUR\n\nclass TimeOnSiteByHour extends ParseBase {\n  static get signature () {\n    return `\n     Parse:TimeOnSiteByHour \n     {startAtYmdHi:日志扫描范围上限${DATE_FORMAT.COMMAND_ARGUMENT_BY_MINUTE}格式}\n     {endAtYmdHi:日志扫描范围下限${DATE_FORMAT.COMMAND_ARGUMENT_BY_MINUTE}格式}\n     `\n  }\n\n  static get description () {\n    return '[按小时] 解析nginx日志, 分析记录指定时间范围内用户停留时长'\n  }\n\n  /**\n   * 判断该条记录是不是需要解析的记录\n   * @param {Object} record\n   * @return {Boolean}\n   */\n  isLegalRecord (record) {\n    let recordType = _.get(record, ['type'], '')\n    let code = _.get(record, ['code'], '')\n    let projectId = _.get(record, ['project_id'], '')\n    let durationMs = _.get(record, ['detail', 'duration_ms'], '')\n    code = parseInt(code)\n    durationMs = parseInt(durationMs)\n    projectId = parseInt(projectId)\n    if (recordType !== LegalRecordType) {\n      return false\n    }\n    if (_.isNumber(code) === false) {\n      return false\n    }\n    if (code !== LegalRecordCode) {\n      return false\n    }\n    if (_.isNumber(projectId) === false) {\n      return false\n    }\n    if (projectId < 0) {\n      return false\n    }\n    if (_.isNumber(durationMs) === false) {\n      return false\n    }\n    if (durationMs > MaxAllowRecordDuringMs) {\n      return false\n    }\n    if (durationMs < MinAllowRecordDuringMs) {\n      return false\n    }\n    return true\n  }\n\n  /**\n   * 更新记录\n   */\n  async processRecordAndCacheInProjectMap (record) {\n    let projectId = _.get(record, ['project_id'], 0)\n    let durationMs = _.get(record, ['detail', 'duration_ms'], 0)\n    let country = _.get(record, ['country'], '')\n    let province = _.get(record, ['province'], '')\n    let city = _.get(record, ['city'], '')\n    let recordAt = _.get(record, ['time'], 0)\n\n    let countAtTime = moment.unix(recordAt).format(COUNT_BY_HOUR_DATE_FORMAT)\n    let distributionPath = [country, province, city]\n\n    let countAtMap = new Map()\n    let distribution = {}\n    if (this.projectMap.has(projectId)) {\n      countAtMap = this.projectMap.get(projectId)\n      if (countAtMap.has(countAtTime)) {\n        distribution = countAtMap.get(countAtTime)\n        if (_.has(distribution, distributionPath)) {\n          let oldDurationMs = _.get(distribution, distributionPath, 0)\n          durationMs = durationMs + oldDurationMs\n        }\n      }\n    }\n    _.set(distribution, distributionPath, durationMs)\n    countAtMap.set(countAtTime, distribution)\n    this.projectMap.set(projectId, countAtMap)\n    return true\n  }\n\n  /**\n   * 将数据同步到数据库中\n   */\n  async save2DB () {\n    let totalRecordCount = this.getRecordCountInProjectMap()\n    let processRecordCount = 0\n    let successSaveCount = 0\n    for (let [projectId, countAtMap] of this.projectMap) {\n      for (let [countAtTime, distribution] of countAtMap) {\n        let recordList = MCityDistribution.getFlattenCityRecordListInDistribution(distribution);\n        this.log('recordList',recordList);\n        let totalStayMs = 0\n        for (let record of recordList) {\n          totalStayMs = totalStayMs + record\n        }\n\n        let totalUv = await MUniqueView.getTotalUv(projectId, countAtTime, COUNT_TYPE_HOUR);\n        this.log('replaceUvRecord ',projectId, totalStayMs, totalUv, countAtTime, COUNT_TYPE_HOUR, distribution);\n        let isSuccess = await MDurationDistribution.replaceUvRecord(projectId, totalStayMs, totalUv, countAtTime, COUNT_TYPE_HOUR, distribution)\n        processRecordCount = processRecordCount + 1\n        if (isSuccess) {\n          successSaveCount = successSaveCount + 1\n        }\n        this.reportProcess(processRecordCount, successSaveCount, totalRecordCount)\n      }\n    }\n    return { totalRecordCount, processRecordCount, successSaveCount }\n  }\n\n  /**\n   * 统计 projectUvMap 中的记录总数\n   */\n  getRecordCountInProjectMap () {\n    let totalCount = 0\n    for (let [projectId, countAtMap] of this.projectMap) {\n      for (let [countAtTime, distribution] of countAtMap) {\n        totalCount = totalCount + 1\n      }\n    }\n    return totalCount\n  }\n}\n\nexport default TimeOnSiteByHour\n"],"file":"time_on_site.js"}