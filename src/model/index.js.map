{"version":3,"sources":["index.js"],"names":["moment","_","Knex","SPLIT_BY","PROJECT","MONTH","NONE","getTableName","tableName","splitBy","projectId","yearMonth","format","getAll","datas","select","from","getDistinct","params","where","distinctName","distinct","getSelect","table","getSelectOffset","limit","offset","groupBy","column","res","count","getTotalCount","get"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport _ from 'lodash'\nimport Knex from '~/src/library/mysql'\n\nexport const SPLIT_BY = {\n  PROJECT: 'project',\n  MONTH: 'month',\n  NONE: 'none'\n}\n\nfunction getTableName (tableName, splitBy, projectId) {\n  const yearMonth = moment().format('YYYYMM')\n  switch (splitBy) {\n    case 'project':\n      return `${tableName}_${projectId}`\n    case 'month':\n      return `${tableName}_${projectId}_${yearMonth}`\n    default:\n      return tableName\n  }\n}\n\nasync function getAll (tableName) {\n  const datas = await Knex.select('*').from(tableName)\n  return datas\n}\n\nasync function getDistinct (params) {\n  const { tableName, where, distinctName } = params\n  const datas = await Knex(tableName).select().distinct(distinctName).where(where)\n  return datas\n}\n\nasync function getSelect (params) {\n  const { tableName, where, splitBy, projectId } = params\n  const table = getTableName(tableName, splitBy, projectId)\n  const datas = await Knex(table).select().where(where)\n  return datas\n}\n\nasync function getSelectOffset (params, limit, offset) {\n  const { tableName, where, splitBy, projectId } = params\n  const table = getTableName(tableName, splitBy, projectId)\n  const datas = await Knex(table)\n    .select()\n    .where(where)\n    .limit(limit)\n    .offset(offset)\n  return datas\n}\n\n/**\n * 统计某一列的个数\n * @param {object} params\n */\nasync function groupBy (params) {\n  const { tableName, column, where, splitBy, projectId } = params\n  const table = getTableName(tableName, splitBy, projectId)\n  let res = await Knex(table).select(column).count('*').groupBy(column).where(where)\n  return res\n}\n\nasync function getTotalCount (params) {\n  const { tableName, where, splitBy, projectId } = params\n  const table = getTableName(tableName, splitBy, projectId)\n  let res = await Knex(table).count('id as count').where(where)\n  const count = _.get(res, [0, 'count'], 0)\n  return count\n}\n\nexport default {\n  getAll,\n  getSelect,\n  getDistinct,\n  getSelectOffset,\n  groupBy,\n  getTotalCount,\n  SPLIT_BY\n}\n"],"file":"index.js"}