{"version":3,"sources":["project.js"],"names":["Knex","moment","_","Logger","BASE_TABLE_NAME","TABLE_COLUMN","DISPLAY_TABLE_COLUMN","getTableName","formatRecord","rawRecord","record","column","has","add","data","tableName","createTime","unix","updateTime","insertData","create_time","update_time","is_delete","insertResult","returning","insert","into","catch","err","log","message","id","get","result","select","from","where","project","getList","update","updateData","nowAt","newRecord","getProjectListById","idList","whereIn","andWhere"],"mappings":"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","sourcesContent":["import Knex from '~/src/library/mysql'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport Logger from '~/src/library/logger'\n\nconst BASE_TABLE_NAME = 't_o_project'\nconst TABLE_COLUMN = [\n  `id`,\n  `project_name`,\n  `display_name`,\n  `rate`,\n  `c_desc`,\n  `create_time`,\n  `create_ucid`,\n  `update_time`,\n  `update_ucid`,\n  `is_delete`\n]\nconst DISPLAY_TABLE_COLUMN = [\n  `id`,\n  `project_name`,\n  `display_name`,\n  `rate`,\n  `c_desc`,\n  `create_time`,\n  `create_ucid`,\n  `update_time`,\n  `update_ucid`\n]\nfunction getTableName () {\n  return BASE_TABLE_NAME\n}\n\n/**\n * 删除不必要的字段\n * @param {*} data\n */\nfunction formatRecord (rawRecord) {\n  let record = {}\n  for (let column of DISPLAY_TABLE_COLUMN) {\n    if (_.has(rawRecord, [column])) {\n      record[column] = rawRecord[column]\n    }\n  }\n  return record\n}\n\n/**\n * 添加项目\n * @param {object} data\n */\nasync function add (data) {\n  let tableName = getTableName()\n  let createTime = moment().unix()\n  let updateTime = createTime\n\n  let insertData = {}\n  for (let column of [\n    `project_name`,\n    `display_name`,\n    `c_desc`,\n    `create_ucid`,\n    `update_ucid`\n  ]) {\n    if (_.has(data, [column])) {\n      insertData[column] = data[column]\n    }\n  }\n  insertData = {\n    ...insertData,\n    create_time: createTime,\n    update_time: updateTime,\n    is_delete: 0\n  }\n  let insertResult = await Knex\n    .returning('id')\n    .insert(insertData)\n    .into(tableName)\n    .catch(err => {\n      Logger.log(err.message, 'project_item    add   出错')\n      return []\n    })\n  let id = _.get(insertResult, [0], 0)\n\n  return id > 0\n}\n\n/**\n * 获取项目信息\n * @param {number} id\n */\nasync function get (id) {\n  let tableName = getTableName()\n  let result = await Knex\n    .select(TABLE_COLUMN)\n    .from(tableName)\n    .where('id', '=', id)\n    .catch(err => {\n      Logger.log(err.message, 'project_item    get   出错')\n      return []\n    })\n  let project = _.get(result, ['0'], {})\n  return project\n}\n\n/**\n * 项目列表\n */\nasync function getList () {\n  let tableName = getTableName()\n  let result = await Knex\n    .select(TABLE_COLUMN)\n    .from(tableName)\n    .where('is_delete', 0)\n    .catch(err => {\n      Logger.log(err.message, 'project_item    getlist   出错')\n      return []\n    })\n  return result\n}\n\n/**\n * 更新记录\n * @param {number} id\n * @param {object} updateData = {}\n */\nasync function update (id, updateData) {\n  let nowAt = moment().unix()\n\n  let newRecord = {}\n  for (let column of [\n    'project_name',\n    'display_name',\n    'c_desc',\n    'is_delete',\n    'update_ucid'\n  ]) {\n    if (_.has(updateData, [column])) {\n      newRecord[column] = updateData[column]\n    }\n  }\n  newRecord = {\n    ...newRecord,\n    update_time: nowAt\n  }\n  let tableName = getTableName()\n  let result = await Knex(tableName)\n    .update(newRecord)\n    .where('id', id)\n    .catch(err => {\n      Logger.log(err.message, 'project_item    update   出错')\n      return []\n    })\n  return result === 1\n}\n\n/**\n * 获取项目id列表\n * @param {*} idList\n */\nasync function getProjectListById (idList) {\n  let tableName = getTableName()\n\n  let result = await Knex\n    .select(TABLE_COLUMN)\n    .from(tableName)\n    .whereIn('id', idList)\n    .andWhere('is_delete', 0)\n    .catch(err => {\n      Logger.log(err.message, 'project_item   getProjectListById   出错')\n      return []\n    })\n  return result\n}\nexport default {\n  get,\n  getList,\n  update,\n  getTableName,\n  add,\n\n  // 限制导出数据\n  formatRecord,\n\n  // 获取id对应的名\n  getProjectListById\n}\n"],"file":"project.js"}