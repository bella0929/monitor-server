{"version":3,"sources":["alarm_config.js"],"names":["_","Knex","moment","Logger","BASE_TABLE_NAME","TABLE_COLUMN","DISPKAY_COLUMN","formatRecord","rawRecord","result","column","has","getTableName","add","insertData","tableName","createTime","unix","updateTime","newRecord","allowColumn","create_time","update_time","is_delete","insertResult","returning","insert","into","catch","err","log","insertId","get","query","id","select","from","where","andWhere","record","getList","projectId","offset","max","limit","error","update","updateData","getCount","count","getAll","getAllEnabled"],"mappings":"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","sourcesContent":["import _ from 'lodash'\nimport Knex from '~/src/library/mysql'\nimport moment from 'moment'\nimport Logger from '~/src/library/logger'\n\nconst BASE_TABLE_NAME = 't_o_alarm_config'\nconst TABLE_COLUMN = [\n  `id`,\n  `project_id`,\n  `owner_ucid`,\n  `error_type`,\n  `error_name`,\n  `time_range_s`,\n  `max_error_count`,\n  `alarm_interval_s`,\n  `is_enable`,\n  `note`,\n  `is_delete`,\n  `create_ucid`,\n  `update_ucid`,\n  `create_time`,\n  `update_time`\n]\nconst DISPKAY_COLUMN = [\n  `id`,\n  `project_id`,\n  `owner_ucid`,\n  `error_type`,\n  `error_name`,\n  `time_range_s`,\n  `max_error_count`,\n  `alarm_interval_s`,\n  `is_enable`,\n  `note`,\n  `create_ucid`,\n  `update_ucid`,\n  `create_time`,\n  `update_time`\n]\n\n/**\n * 删除不必要的字段\n * @param {object} rawRecord\n */\nfunction formatRecord (rawRecord) {\n  let result = {}\n  for (let column of DISPKAY_COLUMN) {\n    if (_.has(rawRecord, [column])) {\n      result[column] = rawRecord[column]\n    }\n  }\n  return result\n}\n\nfunction getTableName () {\n  return BASE_TABLE_NAME\n}\n/**\n * 插入一条报警配置\n * @param {object} insertData\n */\nasync function add (insertData) {\n  const tableName = getTableName()\n  const createTime = moment().unix()\n  const updateTime = createTime\n\n  let newRecord = {}\n  for (let allowColumn of [\n    `project_id`,\n    `owner_ucid`,\n    `error_type`,\n    `error_name`,\n    `time_range_s`,\n    `max_error_count`,\n    `alarm_interval_s`,\n    `is_enable`,\n    `note`,\n    `create_ucid`,\n    `update_ucid`\n  ]) {\n    if (_.has(insertData, [allowColumn])) {\n      newRecord[allowColumn] = insertData[allowColumn]\n    }\n  }\n  newRecord = {\n    ...newRecord,\n    create_time: createTime,\n    update_time: updateTime,\n    is_delete: 0\n  }\n  const insertResult = await Knex\n    .returning('id')\n    .insert(newRecord)\n    .into(tableName)\n    .catch(err => {\n      Logger.log(err, '===============>加入报警配置错误_数据库_add')\n      return []\n    })\n  const insertId = _.get(insertResult, [0], 0)\n  return insertId > 0\n}\n\n/**\n * 获取报警平台某个项目的一条报警配置\n * @param {number} id\n */\nasync function query (id) {\n  const tableName = getTableName()\n\n  const result = await Knex\n    .select(TABLE_COLUMN)\n    .from(tableName)\n    .where('id', id)\n    .andWhere('is_delete', 0)\n    .catch((err) => {\n      Logger.log(err, '=============>获取单个报警配置出错_数据库_query')\n      return []\n    })\n  const record = _.get(result, ['0'], {})\n  return record\n}\n\n/**\n * 获取报警平台某个项目的所有报警配置\n * @param {number} projectId 项目id\n * @param {number} offset    获取数据的偏移量\n * @param {number} max       一页最多展示的数据\n */\nasync function getList (projectId, offset, max = 10) {\n  const tableName = getTableName()\n  const result = await Knex\n    .select(TABLE_COLUMN)\n    .from(tableName)\n    .limit(max)\n    .offset(offset)\n    .where('is_delete', 0)\n    .andWhere('project_id', projectId)\n    .catch((err) => {\n      Logger.error(err, '==================>获取所有报警配置出错_数据库_getList')\n      return []\n    })\n  return result\n}\n\n/**\n * 删除报警平台某个项目的一条报警配置\n * @param {number} id\n * @param {object} updateData = {owner_ucid, error_type, error_name, alarm_interval_s, max_error_count, time_range_s}\n */\nasync function update (id, updateData) {\n  const tableName = getTableName()\n  const updateTime = moment().unix()\n  let newRecord = {}\n  for (let allowColumn of [\n    `project_id`,\n    `owner_ucid`,\n    `error_type`,\n    `error_name`,\n    `time_range_s`,\n    `max_error_count`,\n    `alarm_interval_s`,\n    `is_enable`,\n    `note`,\n    `update_ucid`,\n    `is_delete`\n  ]) {\n    if (_.has(updateData, [allowColumn])) {\n      newRecord[allowColumn] = updateData[allowColumn]\n    }\n  }\n  newRecord = {\n    ...newRecord,\n    update_time: updateTime\n  }\n  const result = await Knex(tableName)\n    .update(newRecord)\n    .where('id', id)\n    .catch(err => {\n      Logger.log(err, '=============>更新报警配置出错_数据库_update')\n      return 0\n    })\n  return result\n}\n/**\n * 获取报警平台某个项目的报警配置的个数\n * @param {number} projectId\n */\nasync function getCount (projectId) {\n  const tableName = getTableName()\n  const result = await Knex(tableName)\n    .count('id as totalCount')\n    .where('project_id', projectId)\n    .andWhere('is_delete', 0)\n    .catch(err => {\n      Logger.log(err, '==================>获取报警配置总数出错_数据库_getCount')\n      return []\n    })\n  const count = _.get(result, ['0', 'totalCount'], 0)\n  return count\n}\n\n/**\n * 获取所有配置（内部使用）\n */\nasync function getAll () {\n  const tableName = getTableName()\n  const result = await Knex(tableName)\n    .select(TABLE_COLUMN)\n    .where('is_delete', 0)\n    .catch(err => {\n      Logger.log(err, '==================>获取报警配置总数出错_数据库_getAll')\n      return []\n    })\n  return result\n}\n\n/**\n * 获取所有可用的配置（内部使用）\n */\nasync function getAllEnabled () {\n  const tableName = getTableName()\n  const result = await Knex(tableName)\n    .select(TABLE_COLUMN)\n    .where('is_delete', 0)\n    .where('is_enable', 1)\n    .catch(err => {\n      Logger.log(err, '==================>获取报警配置总数出错_数据库_getAllEnabled')\n      return []\n    })\n  return result\n}\nexport default {\n  add,\n  query,\n  getList,\n  update,\n  getCount,\n  getTableName,\n  getAll,\n  formatRecord,\n  getAllEnabled\n}\n"],"file":"alarm_config.js"}